{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Team_Attributes_Code","provenance":[],"collapsed_sections":["YD2L1mLYBA-i"],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"UsKjpULEpoNj"},"source":["# Notes\n","* GBTree\n","* RF\n","* Linear Regression\n"]},{"cell_type":"code","metadata":{"id":"HF3-r-hXj6XM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1616963071214,"user_tz":240,"elapsed":833,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}},"outputId":"d401b9df-ace7-4181-c635-311331182655"},"source":["from google.colab import drive\n","drive.mount('/content/drive')\n","# Directory: /content/drive/MyDrive/Citadel Datathon"],"execution_count":277,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"S0u2yfUMkbRb","executionInfo":{"status":"ok","timestamp":1616963071491,"user_tz":240,"elapsed":1079,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}}},"source":["import numpy as np\n","import pandas as pd\n","\n","from matplotlib import pyplot as plt\n","import seaborn as sns\n","\n","from sklearn.metrics import accuracy_score\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LinearRegression\n","from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor\n","from sklearn.neural_network import MLPRegressor\n","from sklearn.metrics import mean_squared_error\n","\n","import statsmodels.api as sm\n","\n","import sqlite3"],"execution_count":278,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ncBW_hgTBOxm"},"source":["#Data Preprocessing"]},{"cell_type":"markdown","metadata":{"id":"j6u4-AqgBF9D"},"source":["## Team"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":201},"id":"IDjrUuP8p9QC","executionInfo":{"status":"ok","timestamp":1616963071493,"user_tz":240,"elapsed":1053,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}},"outputId":"1774f8b6-48d4-4bea-931e-5ed6ae79888c"},"source":["team = pd.read_csv(\"/content/drive/MyDrive/Citadel Datathon/Datathon Materials/team.csv\", engine='python')\n","team.head(5)"],"execution_count":279,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>team_id</th>\n","      <th>team_long_name</th>\n","      <th>team_short_name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>9987</td>\n","      <td>KRC Genk</td>\n","      <td>GEN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>9993</td>\n","      <td>Beerschot AC</td>\n","      <td>BAC</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10000</td>\n","      <td>SV Zulte-Waregem</td>\n","      <td>ZUL</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>9994</td>\n","      <td>Sporting Lokeren</td>\n","      <td>LOK</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>9984</td>\n","      <td>KSV Cercle Brugge</td>\n","      <td>CEB</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   team_id     team_long_name team_short_name\n","0     9987           KRC Genk             GEN\n","1     9993       Beerschot AC             BAC\n","2    10000   SV Zulte-Waregem             ZUL\n","3     9994   Sporting Lokeren             LOK\n","4     9984  KSV Cercle Brugge             CEB"]},"metadata":{"tags":[]},"execution_count":279}]},{"cell_type":"markdown","metadata":{"id":"y2oARQePBEfn"},"source":["## Attri"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":303},"id":"VYskkbnn2XXh","executionInfo":{"status":"ok","timestamp":1616963071494,"user_tz":240,"elapsed":1013,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}},"outputId":"eed35be4-f741-4d1f-bff8-aae2e09ee8eb"},"source":["attri = pd.read_csv(\"/content/drive/MyDrive/Citadel Datathon/Datathon Materials/team_attributes.csv\", engine='python')\n","attri.head()"],"execution_count":280,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>team_id</th>\n","      <th>date</th>\n","      <th>buildUpPlaySpeed</th>\n","      <th>buildUpPlaySpeedClass</th>\n","      <th>buildUpPlayDribbling</th>\n","      <th>buildUpPlayDribblingClass</th>\n","      <th>buildUpPlayPassing</th>\n","      <th>buildUpPlayPassingClass</th>\n","      <th>buildUpPlayPositioningClass</th>\n","      <th>chanceCreationPassing</th>\n","      <th>chanceCreationPassingClass</th>\n","      <th>chanceCreationCrossing</th>\n","      <th>chanceCreationCrossingClass</th>\n","      <th>chanceCreationShooting</th>\n","      <th>chanceCreationShootingClass</th>\n","      <th>chanceCreationPositioningClass</th>\n","      <th>defencePressure</th>\n","      <th>defencePressureClass</th>\n","      <th>defenceAggression</th>\n","      <th>defenceAggressionClass</th>\n","      <th>defenceTeamWidth</th>\n","      <th>defenceTeamWidthClass</th>\n","      <th>defenceDefenderLineClass</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>9930</td>\n","      <td>2/22/10 0:00</td>\n","      <td>60</td>\n","      <td>Balanced</td>\n","      <td>NaN</td>\n","      <td>Little</td>\n","      <td>50</td>\n","      <td>Mixed</td>\n","      <td>Organised</td>\n","      <td>60</td>\n","      <td>Normal</td>\n","      <td>65</td>\n","      <td>Normal</td>\n","      <td>55</td>\n","      <td>Normal</td>\n","      <td>Organised</td>\n","      <td>50</td>\n","      <td>Medium</td>\n","      <td>55</td>\n","      <td>Press</td>\n","      <td>45</td>\n","      <td>Normal</td>\n","      <td>Cover</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>9930</td>\n","      <td>9/19/14 0:00</td>\n","      <td>52</td>\n","      <td>Balanced</td>\n","      <td>48.0</td>\n","      <td>Normal</td>\n","      <td>56</td>\n","      <td>Mixed</td>\n","      <td>Organised</td>\n","      <td>54</td>\n","      <td>Normal</td>\n","      <td>63</td>\n","      <td>Normal</td>\n","      <td>64</td>\n","      <td>Normal</td>\n","      <td>Organised</td>\n","      <td>47</td>\n","      <td>Medium</td>\n","      <td>44</td>\n","      <td>Press</td>\n","      <td>54</td>\n","      <td>Normal</td>\n","      <td>Cover</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>9930</td>\n","      <td>9/10/15 0:00</td>\n","      <td>47</td>\n","      <td>Balanced</td>\n","      <td>41.0</td>\n","      <td>Normal</td>\n","      <td>54</td>\n","      <td>Mixed</td>\n","      <td>Organised</td>\n","      <td>54</td>\n","      <td>Normal</td>\n","      <td>63</td>\n","      <td>Normal</td>\n","      <td>64</td>\n","      <td>Normal</td>\n","      <td>Organised</td>\n","      <td>47</td>\n","      <td>Medium</td>\n","      <td>44</td>\n","      <td>Press</td>\n","      <td>54</td>\n","      <td>Normal</td>\n","      <td>Cover</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>8485</td>\n","      <td>2/22/10 0:00</td>\n","      <td>70</td>\n","      <td>Fast</td>\n","      <td>NaN</td>\n","      <td>Little</td>\n","      <td>70</td>\n","      <td>Long</td>\n","      <td>Organised</td>\n","      <td>70</td>\n","      <td>Risky</td>\n","      <td>70</td>\n","      <td>Lots</td>\n","      <td>70</td>\n","      <td>Lots</td>\n","      <td>Organised</td>\n","      <td>60</td>\n","      <td>Medium</td>\n","      <td>70</td>\n","      <td>Double</td>\n","      <td>70</td>\n","      <td>Wide</td>\n","      <td>Cover</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>8485</td>\n","      <td>2/22/11 0:00</td>\n","      <td>47</td>\n","      <td>Balanced</td>\n","      <td>NaN</td>\n","      <td>Little</td>\n","      <td>52</td>\n","      <td>Mixed</td>\n","      <td>Organised</td>\n","      <td>53</td>\n","      <td>Normal</td>\n","      <td>48</td>\n","      <td>Normal</td>\n","      <td>52</td>\n","      <td>Normal</td>\n","      <td>Organised</td>\n","      <td>47</td>\n","      <td>Medium</td>\n","      <td>47</td>\n","      <td>Press</td>\n","      <td>52</td>\n","      <td>Normal</td>\n","      <td>Cover</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   team_id          date  ...  defenceTeamWidthClass defenceDefenderLineClass\n","0     9930  2/22/10 0:00  ...                 Normal                    Cover\n","1     9930  9/19/14 0:00  ...                 Normal                    Cover\n","2     9930  9/10/15 0:00  ...                 Normal                    Cover\n","3     8485  2/22/10 0:00  ...                   Wide                    Cover\n","4     8485  2/22/11 0:00  ...                 Normal                    Cover\n","\n","[5 rows x 23 columns]"]},"metadata":{"tags":[]},"execution_count":280}]},{"cell_type":"code","metadata":{"id":"P1s9JP2lvJBv","colab":{"base_uri":"https://localhost:8080/","height":303},"executionInfo":{"status":"ok","timestamp":1616963071811,"user_tz":240,"elapsed":1293,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}},"outputId":"61e59914-a2a5-42f2-8637-6a28cf1c82d2"},"source":["# import datetime\n","# attri['date'] = pd.to_datetime(attri['date'])\n","# attri[\"date\"] = attri[\"date\"].dt.strftime(\"%y/%m/%d\")\n","# attri['date'] = attri['date'].astype(str)\n","# attri.head()\n","\n","import datetime\n","attri[\"year\"] = pd.to_datetime(attri[\"date\"], format='%m/%d/%y %H:%M').dt.year\n","attri[\"month\"] = pd.to_datetime(attri[\"date\"], format='%m/%d/%y %H:%M').dt.month\n","attri[\"day\"] = pd.to_datetime(attri[\"date\"], format='%m/%d/%y %H:%M').dt.day\n","\n","attri['year'] = attri['year'].astype(int)\n","attri['month'] = attri['month'].astype(int)\n","attri['day'] = attri['day'].astype(int)\n","\n","attri.head()"],"execution_count":281,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>team_id</th>\n","      <th>date</th>\n","      <th>buildUpPlaySpeed</th>\n","      <th>buildUpPlaySpeedClass</th>\n","      <th>buildUpPlayDribbling</th>\n","      <th>buildUpPlayDribblingClass</th>\n","      <th>buildUpPlayPassing</th>\n","      <th>buildUpPlayPassingClass</th>\n","      <th>buildUpPlayPositioningClass</th>\n","      <th>chanceCreationPassing</th>\n","      <th>chanceCreationPassingClass</th>\n","      <th>chanceCreationCrossing</th>\n","      <th>chanceCreationCrossingClass</th>\n","      <th>chanceCreationShooting</th>\n","      <th>chanceCreationShootingClass</th>\n","      <th>chanceCreationPositioningClass</th>\n","      <th>defencePressure</th>\n","      <th>defencePressureClass</th>\n","      <th>defenceAggression</th>\n","      <th>defenceAggressionClass</th>\n","      <th>defenceTeamWidth</th>\n","      <th>defenceTeamWidthClass</th>\n","      <th>defenceDefenderLineClass</th>\n","      <th>year</th>\n","      <th>month</th>\n","      <th>day</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>9930</td>\n","      <td>2/22/10 0:00</td>\n","      <td>60</td>\n","      <td>Balanced</td>\n","      <td>NaN</td>\n","      <td>Little</td>\n","      <td>50</td>\n","      <td>Mixed</td>\n","      <td>Organised</td>\n","      <td>60</td>\n","      <td>Normal</td>\n","      <td>65</td>\n","      <td>Normal</td>\n","      <td>55</td>\n","      <td>Normal</td>\n","      <td>Organised</td>\n","      <td>50</td>\n","      <td>Medium</td>\n","      <td>55</td>\n","      <td>Press</td>\n","      <td>45</td>\n","      <td>Normal</td>\n","      <td>Cover</td>\n","      <td>2010</td>\n","      <td>2</td>\n","      <td>22</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>9930</td>\n","      <td>9/19/14 0:00</td>\n","      <td>52</td>\n","      <td>Balanced</td>\n","      <td>48.0</td>\n","      <td>Normal</td>\n","      <td>56</td>\n","      <td>Mixed</td>\n","      <td>Organised</td>\n","      <td>54</td>\n","      <td>Normal</td>\n","      <td>63</td>\n","      <td>Normal</td>\n","      <td>64</td>\n","      <td>Normal</td>\n","      <td>Organised</td>\n","      <td>47</td>\n","      <td>Medium</td>\n","      <td>44</td>\n","      <td>Press</td>\n","      <td>54</td>\n","      <td>Normal</td>\n","      <td>Cover</td>\n","      <td>2014</td>\n","      <td>9</td>\n","      <td>19</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>9930</td>\n","      <td>9/10/15 0:00</td>\n","      <td>47</td>\n","      <td>Balanced</td>\n","      <td>41.0</td>\n","      <td>Normal</td>\n","      <td>54</td>\n","      <td>Mixed</td>\n","      <td>Organised</td>\n","      <td>54</td>\n","      <td>Normal</td>\n","      <td>63</td>\n","      <td>Normal</td>\n","      <td>64</td>\n","      <td>Normal</td>\n","      <td>Organised</td>\n","      <td>47</td>\n","      <td>Medium</td>\n","      <td>44</td>\n","      <td>Press</td>\n","      <td>54</td>\n","      <td>Normal</td>\n","      <td>Cover</td>\n","      <td>2015</td>\n","      <td>9</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>8485</td>\n","      <td>2/22/10 0:00</td>\n","      <td>70</td>\n","      <td>Fast</td>\n","      <td>NaN</td>\n","      <td>Little</td>\n","      <td>70</td>\n","      <td>Long</td>\n","      <td>Organised</td>\n","      <td>70</td>\n","      <td>Risky</td>\n","      <td>70</td>\n","      <td>Lots</td>\n","      <td>70</td>\n","      <td>Lots</td>\n","      <td>Organised</td>\n","      <td>60</td>\n","      <td>Medium</td>\n","      <td>70</td>\n","      <td>Double</td>\n","      <td>70</td>\n","      <td>Wide</td>\n","      <td>Cover</td>\n","      <td>2010</td>\n","      <td>2</td>\n","      <td>22</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>8485</td>\n","      <td>2/22/11 0:00</td>\n","      <td>47</td>\n","      <td>Balanced</td>\n","      <td>NaN</td>\n","      <td>Little</td>\n","      <td>52</td>\n","      <td>Mixed</td>\n","      <td>Organised</td>\n","      <td>53</td>\n","      <td>Normal</td>\n","      <td>48</td>\n","      <td>Normal</td>\n","      <td>52</td>\n","      <td>Normal</td>\n","      <td>Organised</td>\n","      <td>47</td>\n","      <td>Medium</td>\n","      <td>47</td>\n","      <td>Press</td>\n","      <td>52</td>\n","      <td>Normal</td>\n","      <td>Cover</td>\n","      <td>2011</td>\n","      <td>2</td>\n","      <td>22</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   team_id          date  buildUpPlaySpeed  ...  year  month day\n","0     9930  2/22/10 0:00                60  ...  2010      2  22\n","1     9930  9/19/14 0:00                52  ...  2014      9  19\n","2     9930  9/10/15 0:00                47  ...  2015      9  10\n","3     8485  2/22/10 0:00                70  ...  2010      2  22\n","4     8485  2/22/11 0:00                47  ...  2011      2  22\n","\n","[5 rows x 26 columns]"]},"metadata":{"tags":[]},"execution_count":281}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":431},"id":"byVoeiIEMUuz","executionInfo":{"status":"ok","timestamp":1616963071813,"user_tz":240,"elapsed":1258,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}},"outputId":"dac35cb0-5cf7-418e-a3df-fa949fe52d05"},"source":["team_attri = attri.groupby(['team_id', 'year', 'month']).mean().reset_index()\n","team_attri"],"execution_count":282,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>team_id</th>\n","      <th>year</th>\n","      <th>month</th>\n","      <th>buildUpPlaySpeed</th>\n","      <th>buildUpPlayDribbling</th>\n","      <th>buildUpPlayPassing</th>\n","      <th>chanceCreationPassing</th>\n","      <th>chanceCreationCrossing</th>\n","      <th>chanceCreationShooting</th>\n","      <th>defencePressure</th>\n","      <th>defenceAggression</th>\n","      <th>defenceTeamWidth</th>\n","      <th>day</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1601</td>\n","      <td>2010</td>\n","      <td>2</td>\n","      <td>30</td>\n","      <td>NaN</td>\n","      <td>40</td>\n","      <td>50</td>\n","      <td>35</td>\n","      <td>70</td>\n","      <td>65</td>\n","      <td>60</td>\n","      <td>50</td>\n","      <td>22</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1601</td>\n","      <td>2011</td>\n","      <td>2</td>\n","      <td>48</td>\n","      <td>NaN</td>\n","      <td>51</td>\n","      <td>68</td>\n","      <td>67</td>\n","      <td>51</td>\n","      <td>46</td>\n","      <td>48</td>\n","      <td>50</td>\n","      <td>22</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1601</td>\n","      <td>2012</td>\n","      <td>2</td>\n","      <td>53</td>\n","      <td>NaN</td>\n","      <td>55</td>\n","      <td>44</td>\n","      <td>65</td>\n","      <td>50</td>\n","      <td>43</td>\n","      <td>44</td>\n","      <td>49</td>\n","      <td>22</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1601</td>\n","      <td>2013</td>\n","      <td>9</td>\n","      <td>53</td>\n","      <td>NaN</td>\n","      <td>55</td>\n","      <td>44</td>\n","      <td>65</td>\n","      <td>50</td>\n","      <td>43</td>\n","      <td>44</td>\n","      <td>49</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1601</td>\n","      <td>2014</td>\n","      <td>9</td>\n","      <td>53</td>\n","      <td>48.0</td>\n","      <td>38</td>\n","      <td>66</td>\n","      <td>65</td>\n","      <td>50</td>\n","      <td>43</td>\n","      <td>44</td>\n","      <td>49</td>\n","      <td>19</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1452</th>\n","      <td>158085</td>\n","      <td>2014</td>\n","      <td>9</td>\n","      <td>69</td>\n","      <td>66.0</td>\n","      <td>39</td>\n","      <td>55</td>\n","      <td>59</td>\n","      <td>46</td>\n","      <td>35</td>\n","      <td>37</td>\n","      <td>37</td>\n","      <td>19</td>\n","    </tr>\n","    <tr>\n","      <th>1453</th>\n","      <td>158085</td>\n","      <td>2015</td>\n","      <td>9</td>\n","      <td>65</td>\n","      <td>66.0</td>\n","      <td>39</td>\n","      <td>55</td>\n","      <td>59</td>\n","      <td>46</td>\n","      <td>37</td>\n","      <td>39</td>\n","      <td>37</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>1454</th>\n","      <td>208931</td>\n","      <td>2014</td>\n","      <td>9</td>\n","      <td>32</td>\n","      <td>46.0</td>\n","      <td>31</td>\n","      <td>47</td>\n","      <td>36</td>\n","      <td>54</td>\n","      <td>46</td>\n","      <td>44</td>\n","      <td>51</td>\n","      <td>19</td>\n","    </tr>\n","    <tr>\n","      <th>1455</th>\n","      <td>208931</td>\n","      <td>2015</td>\n","      <td>9</td>\n","      <td>80</td>\n","      <td>45.0</td>\n","      <td>65</td>\n","      <td>70</td>\n","      <td>40</td>\n","      <td>50</td>\n","      <td>25</td>\n","      <td>55</td>\n","      <td>35</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>1456</th>\n","      <td>274581</td>\n","      <td>2015</td>\n","      <td>9</td>\n","      <td>50</td>\n","      <td>50.0</td>\n","      <td>50</td>\n","      <td>50</td>\n","      <td>50</td>\n","      <td>50</td>\n","      <td>45</td>\n","      <td>45</td>\n","      <td>50</td>\n","      <td>10</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1457 rows × 13 columns</p>\n","</div>"],"text/plain":["      team_id  year  month  ...  defenceAggression  defenceTeamWidth  day\n","0        1601  2010      2  ...                 60                50   22\n","1        1601  2011      2  ...                 48                50   22\n","2        1601  2012      2  ...                 44                49   22\n","3        1601  2013      9  ...                 44                49   20\n","4        1601  2014      9  ...                 44                49   19\n","...       ...   ...    ...  ...                ...               ...  ...\n","1452   158085  2014      9  ...                 37                37   19\n","1453   158085  2015      9  ...                 39                37   10\n","1454   208931  2014      9  ...                 44                51   19\n","1455   208931  2015      9  ...                 55                35   10\n","1456   274581  2015      9  ...                 45                50   10\n","\n","[1457 rows x 13 columns]"]},"metadata":{"tags":[]},"execution_count":282}]},{"cell_type":"markdown","metadata":{"id":"YD2L1mLYBA-i"},"source":["##Match"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"LykFiyvt5e-P","executionInfo":{"status":"ok","timestamp":1616963072143,"user_tz":240,"elapsed":1561,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}},"outputId":"c453c3a1-cff1-41ff-cb56-04202b719dc4"},"source":["match = pd.read_csv(\"/content/drive/MyDrive/Citadel Datathon/match_clean2.csv\", engine='python')\n","match.head()"],"execution_count":283,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>country_id</th>\n","      <th>league_id</th>\n","      <th>season</th>\n","      <th>stage</th>\n","      <th>date</th>\n","      <th>match_id</th>\n","      <th>home_team_id</th>\n","      <th>away_team_id</th>\n","      <th>home_team_goal</th>\n","      <th>away_team_goal</th>\n","      <th>home_net_score</th>\n","      <th>away_net_score</th>\n","      <th>avg_h_bet</th>\n","      <th>avg_d_bet</th>\n","      <th>avg_a_bet</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2008/2009</td>\n","      <td>1</td>\n","      <td>08/08/16</td>\n","      <td>492474</td>\n","      <td>10000</td>\n","      <td>9994</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1.898889</td>\n","      <td>3.250000</td>\n","      <td>3.616667</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2008/2009</td>\n","      <td>1</td>\n","      <td>08/08/16</td>\n","      <td>492475</td>\n","      <td>9984</td>\n","      <td>8635</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.462222</td>\n","      <td>3.233333</td>\n","      <td>2.544444</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2008/2009</td>\n","      <td>1</td>\n","      <td>08/08/16</td>\n","      <td>492477</td>\n","      <td>7947</td>\n","      <td>9985</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4.494444</td>\n","      <td>3.422222</td>\n","      <td>1.674444</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2008/2009</td>\n","      <td>1</td>\n","      <td>08/08/16</td>\n","      <td>492479</td>\n","      <td>9999</td>\n","      <td>8571</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1.957778</td>\n","      <td>3.266667</td>\n","      <td>3.400000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2008/2009</td>\n","      <td>1</td>\n","      <td>08/08/16</td>\n","      <td>492480</td>\n","      <td>4049</td>\n","      <td>9996</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.714444</td>\n","      <td>3.272222</td>\n","      <td>2.316667</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Unnamed: 0  country_id  league_id  ... avg_h_bet  avg_d_bet avg_a_bet\n","0           1           1          1  ...  1.898889   3.250000  3.616667\n","1           2           1          1  ...  2.462222   3.233333  2.544444\n","2           4           1          1  ...  4.494444   3.422222  1.674444\n","3           6           1          1  ...  1.957778   3.266667  3.400000\n","4           7           1          1  ...  2.714444   3.272222  2.316667\n","\n","[5 rows x 16 columns]"]},"metadata":{"tags":[]},"execution_count":283}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":514},"id":"37x5uaSfSR8N","executionInfo":{"status":"ok","timestamp":1616963074420,"user_tz":240,"elapsed":3817,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}},"outputId":"72f429af-9dfb-4ec2-dd88-fc0d4a4e74f4"},"source":["match_home = pd.DataFrame(match)\n","match_away = pd.DataFrame(match)\n","\n","def points(row, myteam, otherteam):\n","    if row[myteam] > row[otherteam]:\n","        return 3\n","    elif row[otherteam] > row[myteam]:\n","        return 0\n","    else:\n","        return 1\n","    \n","match_home['points'] = match.apply(lambda row : points(row, \"home_team_goal\", \"away_team_goal\"), axis=1)\n","match_away['points'] = match.apply(lambda row : points(row, \"away_team_goal\", \"home_team_goal\"), axis=1)\n","\n","def wins(row, myteam, otherteam):\n","    if row[myteam] > row[otherteam]:\n","        return 1\n","    else:\n","        return 0\n","    \n","match_home['win'] = match.apply(lambda row : wins(row, \"home_team_goal\", \"away_team_goal\"), axis=1)\n","match_away['win'] = match.apply(lambda row : wins(row, \"away_team_goal\", \"home_team_goal\"), axis=1)\n","\n","def net(row, myteam, otherteam):\n","    return row[myteam] - row[otherteam]\n","    \n","match_home['net'] = match.apply(lambda row : net(row, \"home_team_goal\", \"away_team_goal\"), axis=1)\n","match_away['net'] = match.apply(lambda row : net(row, \"away_team_goal\", \"home_team_goal\"), axis=1)\n","\n","match_home"],"execution_count":284,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>country_id</th>\n","      <th>league_id</th>\n","      <th>season</th>\n","      <th>stage</th>\n","      <th>date</th>\n","      <th>match_id</th>\n","      <th>home_team_id</th>\n","      <th>away_team_id</th>\n","      <th>home_team_goal</th>\n","      <th>away_team_goal</th>\n","      <th>home_net_score</th>\n","      <th>away_net_score</th>\n","      <th>avg_h_bet</th>\n","      <th>avg_d_bet</th>\n","      <th>avg_a_bet</th>\n","      <th>points</th>\n","      <th>win</th>\n","      <th>net</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2008/2009</td>\n","      <td>1</td>\n","      <td>08/08/16</td>\n","      <td>492474</td>\n","      <td>10000</td>\n","      <td>9994</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1.898889</td>\n","      <td>3.250000</td>\n","      <td>3.616667</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2008/2009</td>\n","      <td>1</td>\n","      <td>08/08/16</td>\n","      <td>492475</td>\n","      <td>9984</td>\n","      <td>8635</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.462222</td>\n","      <td>3.233333</td>\n","      <td>2.544444</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2008/2009</td>\n","      <td>1</td>\n","      <td>08/08/16</td>\n","      <td>492477</td>\n","      <td>7947</td>\n","      <td>9985</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4.494444</td>\n","      <td>3.422222</td>\n","      <td>1.674444</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2008/2009</td>\n","      <td>1</td>\n","      <td>08/08/16</td>\n","      <td>492479</td>\n","      <td>9999</td>\n","      <td>8571</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1.957778</td>\n","      <td>3.266667</td>\n","      <td>3.400000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2008/2009</td>\n","      <td>1</td>\n","      <td>08/08/16</td>\n","      <td>492480</td>\n","      <td>4049</td>\n","      <td>9996</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.714444</td>\n","      <td>3.272222</td>\n","      <td>2.316667</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>22592</th>\n","      <td>24479</td>\n","      <td>21518</td>\n","      <td>21518</td>\n","      <td>2015/2016</td>\n","      <td>37</td>\n","      <td>16/05/8</td>\n","      <td>2030520</td>\n","      <td>10205</td>\n","      <td>9783</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>11</td>\n","      <td>-18</td>\n","      <td>2.410000</td>\n","      <td>3.188571</td>\n","      <td>3.027143</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>22593</th>\n","      <td>24478</td>\n","      <td>21518</td>\n","      <td>21518</td>\n","      <td>2015/2016</td>\n","      <td>37</td>\n","      <td>16/05/8</td>\n","      <td>2030519</td>\n","      <td>8633</td>\n","      <td>10267</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>75</td>\n","      <td>-1</td>\n","      <td>1.207143</td>\n","      <td>7.171429</td>\n","      <td>11.642857</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-1</td>\n","    </tr>\n","    <tr>\n","      <th>22594</th>\n","      <td>24477</td>\n","      <td>21518</td>\n","      <td>21518</td>\n","      <td>2015/2016</td>\n","      <td>37</td>\n","      <td>16/05/8</td>\n","      <td>2030518</td>\n","      <td>8560</td>\n","      <td>8370</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>-4</td>\n","      <td>-20</td>\n","      <td>3.432857</td>\n","      <td>3.574286</td>\n","      <td>2.074286</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-1</td>\n","    </tr>\n","    <tr>\n","      <th>22595</th>\n","      <td>24484</td>\n","      <td>21518</td>\n","      <td>21518</td>\n","      <td>2015/2016</td>\n","      <td>37</td>\n","      <td>16/05/8</td>\n","      <td>2030525</td>\n","      <td>8306</td>\n","      <td>8315</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-8</td>\n","      <td>13</td>\n","      <td>3.910000</td>\n","      <td>3.585714</td>\n","      <td>1.920000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>22596</th>\n","      <td>24485</td>\n","      <td>21518</td>\n","      <td>21518</td>\n","      <td>2015/2016</td>\n","      <td>37</td>\n","      <td>16/05/8</td>\n","      <td>2030526</td>\n","      <td>9910</td>\n","      <td>9864</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>-9</td>\n","      <td>4</td>\n","      <td>1.500000</td>\n","      <td>4.311429</td>\n","      <td>6.488571</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>22597 rows × 19 columns</p>\n","</div>"],"text/plain":["       Unnamed: 0  country_id  league_id  ... points  win net\n","0               1           1          1  ...      1    0   0\n","1               2           1          1  ...      3    1   3\n","2               4           1          1  ...      3    1   2\n","3               6           1          1  ...      1    0   0\n","4               7           1          1  ...      3    1   1\n","...           ...         ...        ...  ...    ...  ...  ..\n","22592       24479       21518      21518  ...      3    1   2\n","22593       24478       21518      21518  ...      0    0  -1\n","22594       24477       21518      21518  ...      0    0  -1\n","22595       24484       21518      21518  ...      1    0   0\n","22596       24485       21518      21518  ...      0    0  -1\n","\n","[22597 rows x 19 columns]"]},"metadata":{"tags":[]},"execution_count":284}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":497},"id":"BimIr0r-S8Kn","executionInfo":{"status":"ok","timestamp":1616963074421,"user_tz":240,"elapsed":3801,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}},"outputId":"04258a82-aefd-480f-f53f-7aa3056e22fe"},"source":["match_home = match_home.groupby(['home_team_id', 'season']).mean().reset_index()\n","columns_to_keep = ['season', 'home_team_id', 'points', 'win', 'net']\n","match_home = match_home[columns_to_keep]\n","match_home"],"execution_count":285,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>season</th>\n","      <th>home_team_id</th>\n","      <th>points</th>\n","      <th>win</th>\n","      <th>net</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2011/2012</td>\n","      <td>1773</td>\n","      <td>1.333333</td>\n","      <td>0.333333</td>\n","      <td>-0.066667</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2012/2013</td>\n","      <td>1773</td>\n","      <td>1.200000</td>\n","      <td>0.266667</td>\n","      <td>0.066667</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2015/2016</td>\n","      <td>1773</td>\n","      <td>1.533333</td>\n","      <td>0.466667</td>\n","      <td>-0.066667</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2009/2010</td>\n","      <td>2033</td>\n","      <td>1.533333</td>\n","      <td>0.400000</td>\n","      <td>0.400000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2010/2011</td>\n","      <td>2033</td>\n","      <td>1.133333</td>\n","      <td>0.200000</td>\n","      <td>0.066667</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1264</th>\n","      <td>2015/2016</td>\n","      <td>158085</td>\n","      <td>0.882353</td>\n","      <td>0.176471</td>\n","      <td>-0.588235</td>\n","    </tr>\n","    <tr>\n","      <th>1265</th>\n","      <td>2015/2016</td>\n","      <td>188163</td>\n","      <td>2.000000</td>\n","      <td>0.588235</td>\n","      <td>0.647059</td>\n","    </tr>\n","    <tr>\n","      <th>1266</th>\n","      <td>2015/2016</td>\n","      <td>208931</td>\n","      <td>1.526316</td>\n","      <td>0.421053</td>\n","      <td>0.157895</td>\n","    </tr>\n","    <tr>\n","      <th>1267</th>\n","      <td>2014/2015</td>\n","      <td>274581</td>\n","      <td>1.533333</td>\n","      <td>0.466667</td>\n","      <td>0.066667</td>\n","    </tr>\n","    <tr>\n","      <th>1268</th>\n","      <td>2015/2016</td>\n","      <td>274581</td>\n","      <td>1.733333</td>\n","      <td>0.466667</td>\n","      <td>0.266667</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1269 rows × 5 columns</p>\n","</div>"],"text/plain":["         season  home_team_id    points       win       net\n","0     2011/2012          1773  1.333333  0.333333 -0.066667\n","1     2012/2013          1773  1.200000  0.266667  0.066667\n","2     2015/2016          1773  1.533333  0.466667 -0.066667\n","3     2009/2010          2033  1.533333  0.400000  0.400000\n","4     2010/2011          2033  1.133333  0.200000  0.066667\n","...         ...           ...       ...       ...       ...\n","1264  2015/2016        158085  0.882353  0.176471 -0.588235\n","1265  2015/2016        188163  2.000000  0.588235  0.647059\n","1266  2015/2016        208931  1.526316  0.421053  0.157895\n","1267  2014/2015        274581  1.533333  0.466667  0.066667\n","1268  2015/2016        274581  1.733333  0.466667  0.266667\n","\n","[1269 rows x 5 columns]"]},"metadata":{"tags":[]},"execution_count":285}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":497},"id":"EdQZrq_6VOxi","executionInfo":{"status":"ok","timestamp":1616963074422,"user_tz":240,"elapsed":3784,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}},"outputId":"cb992f5e-cfb7-474e-ec02-8f8cc49ffd81"},"source":["match_away = match_away.groupby(['away_team_id', 'season']).mean().reset_index()\n","columns_to_keep = ['season', 'away_team_id', 'points', 'win', 'net']\n","match_away = match_away[columns_to_keep]\n","match_away"],"execution_count":286,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>season</th>\n","      <th>away_team_id</th>\n","      <th>points</th>\n","      <th>win</th>\n","      <th>net</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2011/2012</td>\n","      <td>1773</td>\n","      <td>0.600000</td>\n","      <td>0.133333</td>\n","      <td>-1.400000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2012/2013</td>\n","      <td>1773</td>\n","      <td>1.000000</td>\n","      <td>0.200000</td>\n","      <td>-0.266667</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2015/2016</td>\n","      <td>1773</td>\n","      <td>0.600000</td>\n","      <td>0.066667</td>\n","      <td>-0.800000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2009/2010</td>\n","      <td>2033</td>\n","      <td>0.800000</td>\n","      <td>0.066667</td>\n","      <td>-0.600000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2010/2011</td>\n","      <td>2033</td>\n","      <td>0.933333</td>\n","      <td>0.200000</td>\n","      <td>-0.600000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1264</th>\n","      <td>2015/2016</td>\n","      <td>158085</td>\n","      <td>1.411765</td>\n","      <td>0.294118</td>\n","      <td>-0.058824</td>\n","    </tr>\n","    <tr>\n","      <th>1265</th>\n","      <td>2015/2016</td>\n","      <td>188163</td>\n","      <td>1.000000</td>\n","      <td>0.294118</td>\n","      <td>-0.529412</td>\n","    </tr>\n","    <tr>\n","      <th>1266</th>\n","      <td>2015/2016</td>\n","      <td>208931</td>\n","      <td>0.789474</td>\n","      <td>0.157895</td>\n","      <td>-0.894737</td>\n","    </tr>\n","    <tr>\n","      <th>1267</th>\n","      <td>2014/2015</td>\n","      <td>274581</td>\n","      <td>0.400000</td>\n","      <td>0.066667</td>\n","      <td>-1.200000</td>\n","    </tr>\n","    <tr>\n","      <th>1268</th>\n","      <td>2015/2016</td>\n","      <td>274581</td>\n","      <td>1.066667</td>\n","      <td>0.266667</td>\n","      <td>-0.533333</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1269 rows × 5 columns</p>\n","</div>"],"text/plain":["         season  away_team_id    points       win       net\n","0     2011/2012          1773  0.600000  0.133333 -1.400000\n","1     2012/2013          1773  1.000000  0.200000 -0.266667\n","2     2015/2016          1773  0.600000  0.066667 -0.800000\n","3     2009/2010          2033  0.800000  0.066667 -0.600000\n","4     2010/2011          2033  0.933333  0.200000 -0.600000\n","...         ...           ...       ...       ...       ...\n","1264  2015/2016        158085  1.411765  0.294118 -0.058824\n","1265  2015/2016        188163  1.000000  0.294118 -0.529412\n","1266  2015/2016        208931  0.789474  0.157895 -0.894737\n","1267  2014/2015        274581  0.400000  0.066667 -1.200000\n","1268  2015/2016        274581  1.066667  0.266667 -0.533333\n","\n","[1269 rows x 5 columns]"]},"metadata":{"tags":[]},"execution_count":286}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":497},"id":"gsEqdEEbYiTf","executionInfo":{"status":"ok","timestamp":1616963074423,"user_tz":240,"elapsed":3767,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}},"outputId":"43b0d753-cf21-4f95-96f3-019bff1236b6"},"source":["match_home = match_home.rename(columns={\"home_team_id\": \"team_id\"})\n","match_away = match_away.rename(columns={\"away_team_id\": \"team_id\"})\n","match = pd.concat([match_home, match_away])\n","match['season'] = match['season'].str.strip().str[-4:].astype(int)\n","match = match.rename(columns={\"season\": \"year\"})\n","match"],"execution_count":287,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>team_id</th>\n","      <th>points</th>\n","      <th>win</th>\n","      <th>net</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2012</td>\n","      <td>1773</td>\n","      <td>1.333333</td>\n","      <td>0.333333</td>\n","      <td>-0.066667</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2013</td>\n","      <td>1773</td>\n","      <td>1.200000</td>\n","      <td>0.266667</td>\n","      <td>0.066667</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2016</td>\n","      <td>1773</td>\n","      <td>1.533333</td>\n","      <td>0.466667</td>\n","      <td>-0.066667</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2010</td>\n","      <td>2033</td>\n","      <td>1.533333</td>\n","      <td>0.400000</td>\n","      <td>0.400000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2011</td>\n","      <td>2033</td>\n","      <td>1.133333</td>\n","      <td>0.200000</td>\n","      <td>0.066667</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1264</th>\n","      <td>2016</td>\n","      <td>158085</td>\n","      <td>1.411765</td>\n","      <td>0.294118</td>\n","      <td>-0.058824</td>\n","    </tr>\n","    <tr>\n","      <th>1265</th>\n","      <td>2016</td>\n","      <td>188163</td>\n","      <td>1.000000</td>\n","      <td>0.294118</td>\n","      <td>-0.529412</td>\n","    </tr>\n","    <tr>\n","      <th>1266</th>\n","      <td>2016</td>\n","      <td>208931</td>\n","      <td>0.789474</td>\n","      <td>0.157895</td>\n","      <td>-0.894737</td>\n","    </tr>\n","    <tr>\n","      <th>1267</th>\n","      <td>2015</td>\n","      <td>274581</td>\n","      <td>0.400000</td>\n","      <td>0.066667</td>\n","      <td>-1.200000</td>\n","    </tr>\n","    <tr>\n","      <th>1268</th>\n","      <td>2016</td>\n","      <td>274581</td>\n","      <td>1.066667</td>\n","      <td>0.266667</td>\n","      <td>-0.533333</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2538 rows × 5 columns</p>\n","</div>"],"text/plain":["      year  team_id    points       win       net\n","0     2012     1773  1.333333  0.333333 -0.066667\n","1     2013     1773  1.200000  0.266667  0.066667\n","2     2016     1773  1.533333  0.466667 -0.066667\n","3     2010     2033  1.533333  0.400000  0.400000\n","4     2011     2033  1.133333  0.200000  0.066667\n","...    ...      ...       ...       ...       ...\n","1264  2016   158085  1.411765  0.294118 -0.058824\n","1265  2016   188163  1.000000  0.294118 -0.529412\n","1266  2016   208931  0.789474  0.157895 -0.894737\n","1267  2015   274581  0.400000  0.066667 -1.200000\n","1268  2016   274581  1.066667  0.266667 -0.533333\n","\n","[2538 rows x 5 columns]"]},"metadata":{"tags":[]},"execution_count":287}]},{"cell_type":"markdown","metadata":{"id":"tRU6HE9KBJTb"},"source":["##Merge"]},{"cell_type":"code","metadata":{"id":"NVzj7JvRgh_s","colab":{"base_uri":"https://localhost:8080/","height":431},"executionInfo":{"status":"ok","timestamp":1616963074423,"user_tz":240,"elapsed":3738,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}},"outputId":"60486309-aa65-4d6a-e4e8-a4b0d5fe3298"},"source":["# join\n","merge_df = pd.merge(team_attri, match, on=[\"team_id\", \"year\"], how=\"inner\")\n","merge_df"],"execution_count":288,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>team_id</th>\n","      <th>year</th>\n","      <th>month</th>\n","      <th>buildUpPlaySpeed</th>\n","      <th>buildUpPlayDribbling</th>\n","      <th>buildUpPlayPassing</th>\n","      <th>chanceCreationPassing</th>\n","      <th>chanceCreationCrossing</th>\n","      <th>chanceCreationShooting</th>\n","      <th>defencePressure</th>\n","      <th>defenceAggression</th>\n","      <th>defenceTeamWidth</th>\n","      <th>day</th>\n","      <th>points</th>\n","      <th>win</th>\n","      <th>net</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1773</td>\n","      <td>2012</td>\n","      <td>2</td>\n","      <td>52</td>\n","      <td>NaN</td>\n","      <td>50</td>\n","      <td>50</td>\n","      <td>53</td>\n","      <td>54</td>\n","      <td>43</td>\n","      <td>44</td>\n","      <td>50</td>\n","      <td>22</td>\n","      <td>1.333333</td>\n","      <td>0.333333</td>\n","      <td>-0.066667</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1773</td>\n","      <td>2012</td>\n","      <td>2</td>\n","      <td>52</td>\n","      <td>NaN</td>\n","      <td>50</td>\n","      <td>50</td>\n","      <td>53</td>\n","      <td>54</td>\n","      <td>43</td>\n","      <td>44</td>\n","      <td>50</td>\n","      <td>22</td>\n","      <td>0.600000</td>\n","      <td>0.133333</td>\n","      <td>-1.400000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1773</td>\n","      <td>2013</td>\n","      <td>9</td>\n","      <td>52</td>\n","      <td>NaN</td>\n","      <td>50</td>\n","      <td>50</td>\n","      <td>53</td>\n","      <td>54</td>\n","      <td>43</td>\n","      <td>44</td>\n","      <td>50</td>\n","      <td>20</td>\n","      <td>1.200000</td>\n","      <td>0.266667</td>\n","      <td>0.066667</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1773</td>\n","      <td>2013</td>\n","      <td>9</td>\n","      <td>52</td>\n","      <td>NaN</td>\n","      <td>50</td>\n","      <td>50</td>\n","      <td>53</td>\n","      <td>54</td>\n","      <td>43</td>\n","      <td>44</td>\n","      <td>50</td>\n","      <td>20</td>\n","      <td>1.000000</td>\n","      <td>0.200000</td>\n","      <td>-0.266667</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2033</td>\n","      <td>2010</td>\n","      <td>2</td>\n","      <td>45</td>\n","      <td>NaN</td>\n","      <td>55</td>\n","      <td>50</td>\n","      <td>60</td>\n","      <td>45</td>\n","      <td>50</td>\n","      <td>45</td>\n","      <td>60</td>\n","      <td>22</td>\n","      <td>1.533333</td>\n","      <td>0.400000</td>\n","      <td>0.400000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1881</th>\n","      <td>158085</td>\n","      <td>2014</td>\n","      <td>9</td>\n","      <td>69</td>\n","      <td>66.0</td>\n","      <td>39</td>\n","      <td>55</td>\n","      <td>59</td>\n","      <td>46</td>\n","      <td>35</td>\n","      <td>37</td>\n","      <td>37</td>\n","      <td>19</td>\n","      <td>0.933333</td>\n","      <td>0.200000</td>\n","      <td>-0.533333</td>\n","    </tr>\n","    <tr>\n","      <th>1882</th>\n","      <td>158085</td>\n","      <td>2015</td>\n","      <td>9</td>\n","      <td>65</td>\n","      <td>66.0</td>\n","      <td>39</td>\n","      <td>55</td>\n","      <td>59</td>\n","      <td>46</td>\n","      <td>37</td>\n","      <td>39</td>\n","      <td>37</td>\n","      <td>10</td>\n","      <td>1.764706</td>\n","      <td>0.529412</td>\n","      <td>0.588235</td>\n","    </tr>\n","    <tr>\n","      <th>1883</th>\n","      <td>158085</td>\n","      <td>2015</td>\n","      <td>9</td>\n","      <td>65</td>\n","      <td>66.0</td>\n","      <td>39</td>\n","      <td>55</td>\n","      <td>59</td>\n","      <td>46</td>\n","      <td>37</td>\n","      <td>39</td>\n","      <td>37</td>\n","      <td>10</td>\n","      <td>0.588235</td>\n","      <td>0.117647</td>\n","      <td>-0.823529</td>\n","    </tr>\n","    <tr>\n","      <th>1884</th>\n","      <td>274581</td>\n","      <td>2015</td>\n","      <td>9</td>\n","      <td>50</td>\n","      <td>50.0</td>\n","      <td>50</td>\n","      <td>50</td>\n","      <td>50</td>\n","      <td>50</td>\n","      <td>45</td>\n","      <td>45</td>\n","      <td>50</td>\n","      <td>10</td>\n","      <td>1.533333</td>\n","      <td>0.466667</td>\n","      <td>0.066667</td>\n","    </tr>\n","    <tr>\n","      <th>1885</th>\n","      <td>274581</td>\n","      <td>2015</td>\n","      <td>9</td>\n","      <td>50</td>\n","      <td>50.0</td>\n","      <td>50</td>\n","      <td>50</td>\n","      <td>50</td>\n","      <td>50</td>\n","      <td>45</td>\n","      <td>45</td>\n","      <td>50</td>\n","      <td>10</td>\n","      <td>0.400000</td>\n","      <td>0.066667</td>\n","      <td>-1.200000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1886 rows × 16 columns</p>\n","</div>"],"text/plain":["      team_id  year  month  buildUpPlaySpeed  ...  day    points       win       net\n","0        1773  2012      2                52  ...   22  1.333333  0.333333 -0.066667\n","1        1773  2012      2                52  ...   22  0.600000  0.133333 -1.400000\n","2        1773  2013      9                52  ...   20  1.200000  0.266667  0.066667\n","3        1773  2013      9                52  ...   20  1.000000  0.200000 -0.266667\n","4        2033  2010      2                45  ...   22  1.533333  0.400000  0.400000\n","...       ...   ...    ...               ...  ...  ...       ...       ...       ...\n","1881   158085  2014      9                69  ...   19  0.933333  0.200000 -0.533333\n","1882   158085  2015      9                65  ...   10  1.764706  0.529412  0.588235\n","1883   158085  2015      9                65  ...   10  0.588235  0.117647 -0.823529\n","1884   274581  2015      9                50  ...   10  1.533333  0.466667  0.066667\n","1885   274581  2015      9                50  ...   10  0.400000  0.066667 -1.200000\n","\n","[1886 rows x 16 columns]"]},"metadata":{"tags":[]},"execution_count":288}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DHmCTUrngjry","executionInfo":{"status":"ok","timestamp":1616963074424,"user_tz":240,"elapsed":3703,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}},"outputId":"99f4346a-f6b7-4ce2-c506-956677f357cd"},"source":["for col in merge_df.columns:\n","    print(col, merge_df[col].isnull().sum() / len(merge_df))\n","merge_df = merge_df.drop(columns='buildUpPlayDribbling')"],"execution_count":289,"outputs":[{"output_type":"stream","text":["team_id 0.0\n","year 0.0\n","month 0.0\n","buildUpPlaySpeed 0.0\n","buildUpPlayDribbling 0.6755037115588547\n","buildUpPlayPassing 0.0\n","chanceCreationPassing 0.0\n","chanceCreationCrossing 0.0\n","chanceCreationShooting 0.0\n","defencePressure 0.0\n","defenceAggression 0.0\n","defenceTeamWidth 0.0\n","day 0.0\n","points 0.0\n","win 0.0\n","net 0.0\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"lD3keaIb8-Il"},"source":["# Model 1: Points"]},{"cell_type":"markdown","metadata":{"id":"sKrhsYcF8-Im"},"source":["## Model Selection"]},{"cell_type":"markdown","metadata":{"id":"xSVakGcy8-Im"},"source":["### LR"]},{"cell_type":"code","metadata":{"id":"ywy1HovS8-Im","executionInfo":{"status":"ok","timestamp":1616963074888,"user_tz":240,"elapsed":4141,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}}},"source":["def lr(train_x, train_y, test_x, test_y):\n","  lr = LinearRegression().fit(train_x, train_y)\n","  predict = lr.predict(test_x)\n","  error = np.sqrt(mean_squared_error(test_y, predict))\n","  return error"],"execution_count":290,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"1z5Gnx2g8-In"},"source":["### GBTree"]},{"cell_type":"code","metadata":{"id":"XFl-4NT28-In","executionInfo":{"status":"ok","timestamp":1616963074889,"user_tz":240,"elapsed":4128,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}}},"source":["def gb(train_x, train_y, test_x, test_y):\n","    gbt =  GradientBoostingRegressor().fit(train_x, train_y)\n","    predict = gbt.predict(test_x)\n","    error = np.sqrt(mean_squared_error(test_y, predict))\n","    return error"],"execution_count":291,"outputs":[]},{"cell_type":"code","metadata":{"id":"e_ebADi98-In","executionInfo":{"status":"ok","timestamp":1616963074890,"user_tz":240,"elapsed":4113,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}}},"source":[""],"execution_count":291,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"hfIoPhxZ8-In"},"source":["### RF"]},{"cell_type":"code","metadata":{"id":"3kXcdkDC8-In","executionInfo":{"status":"ok","timestamp":1616963074891,"user_tz":240,"elapsed":4109,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}}},"source":["def random_forest(train_x, train_y, test_x, test_y):\n","    random_forest =  RandomForestRegressor(max_depth=5).fit(train_x, train_y)\n","    predict = random_forest.predict(test_x)\n","    error = np.sqrt(mean_squared_error(test_y, predict))\n","    return error"],"execution_count":292,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZhZNgin98-Io","executionInfo":{"status":"ok","timestamp":1616963074892,"user_tz":240,"elapsed":4105,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}}},"source":[""],"execution_count":292,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"u_L1u11L8-Io"},"source":["### Models"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":431},"id":"_K3wKM6Q8-Io","executionInfo":{"status":"ok","timestamp":1616963074893,"user_tz":240,"elapsed":4089,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}},"outputId":"186ec715-277d-4d9e-e628-57ab08b5fae0"},"source":["feature_1, target_1 = merge_df.iloc[:, 3:-4] / 100, merge_df.iloc[:, -3]\n","feature_1"],"execution_count":293,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>buildUpPlaySpeed</th>\n","      <th>buildUpPlayPassing</th>\n","      <th>chanceCreationPassing</th>\n","      <th>chanceCreationCrossing</th>\n","      <th>chanceCreationShooting</th>\n","      <th>defencePressure</th>\n","      <th>defenceAggression</th>\n","      <th>defenceTeamWidth</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.52</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.53</td>\n","      <td>0.54</td>\n","      <td>0.43</td>\n","      <td>0.44</td>\n","      <td>0.50</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.52</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.53</td>\n","      <td>0.54</td>\n","      <td>0.43</td>\n","      <td>0.44</td>\n","      <td>0.50</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.52</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.53</td>\n","      <td>0.54</td>\n","      <td>0.43</td>\n","      <td>0.44</td>\n","      <td>0.50</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.52</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.53</td>\n","      <td>0.54</td>\n","      <td>0.43</td>\n","      <td>0.44</td>\n","      <td>0.50</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.45</td>\n","      <td>0.55</td>\n","      <td>0.50</td>\n","      <td>0.60</td>\n","      <td>0.45</td>\n","      <td>0.50</td>\n","      <td>0.45</td>\n","      <td>0.60</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1881</th>\n","      <td>0.69</td>\n","      <td>0.39</td>\n","      <td>0.55</td>\n","      <td>0.59</td>\n","      <td>0.46</td>\n","      <td>0.35</td>\n","      <td>0.37</td>\n","      <td>0.37</td>\n","    </tr>\n","    <tr>\n","      <th>1882</th>\n","      <td>0.65</td>\n","      <td>0.39</td>\n","      <td>0.55</td>\n","      <td>0.59</td>\n","      <td>0.46</td>\n","      <td>0.37</td>\n","      <td>0.39</td>\n","      <td>0.37</td>\n","    </tr>\n","    <tr>\n","      <th>1883</th>\n","      <td>0.65</td>\n","      <td>0.39</td>\n","      <td>0.55</td>\n","      <td>0.59</td>\n","      <td>0.46</td>\n","      <td>0.37</td>\n","      <td>0.39</td>\n","      <td>0.37</td>\n","    </tr>\n","    <tr>\n","      <th>1884</th>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.45</td>\n","      <td>0.45</td>\n","      <td>0.50</td>\n","    </tr>\n","    <tr>\n","      <th>1885</th>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.45</td>\n","      <td>0.45</td>\n","      <td>0.50</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1886 rows × 8 columns</p>\n","</div>"],"text/plain":["      buildUpPlaySpeed  buildUpPlayPassing  ...  defenceAggression  defenceTeamWidth\n","0                 0.52                0.50  ...               0.44              0.50\n","1                 0.52                0.50  ...               0.44              0.50\n","2                 0.52                0.50  ...               0.44              0.50\n","3                 0.52                0.50  ...               0.44              0.50\n","4                 0.45                0.55  ...               0.45              0.60\n","...                ...                 ...  ...                ...               ...\n","1881              0.69                0.39  ...               0.37              0.37\n","1882              0.65                0.39  ...               0.39              0.37\n","1883              0.65                0.39  ...               0.39              0.37\n","1884              0.50                0.50  ...               0.45              0.50\n","1885              0.50                0.50  ...               0.45              0.50\n","\n","[1886 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":293}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":491},"id":"ekhD_NsR8-Ip","executionInfo":{"status":"ok","timestamp":1616963080682,"user_tz":240,"elapsed":9848,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}},"outputId":"b48d201b-76db-4d62-e531-c79ce2e518c9"},"source":["linear_regression = []\n","random_forests = []\n","gradient_boostings = []\n","lr_sum = 0\n","rf_sum = 0\n","gbt_sum = 0\n","n_test = 10\n","for i in range(n_test):\n","    train_x, test_x, train_y, test_y = train_test_split(feature_1, target_1, test_size=0.2, shuffle=True)\n","    lr_error = lr(train_x, train_y, test_x, test_y)\n","    rf_error = random_forest(train_x, train_y, test_x, test_y)\n","    gbt_error = gb(train_x, train_y, test_x, test_y)\n","    linear_regression.append(lr_error)\n","    lr_sum += lr_error\n","    random_forests.append(rf_error)\n","    rf_sum += rf_error\n","    gradient_boostings.append(gbt_error)\n","    gbt_sum += gbt_error\n","    print(\"testing on \" + str(i) + \" rounds is done.\")\n","print(\"average error for linear regression on data is \", lr_sum / n_test)\n","print(\"average error for random forest on data is \", rf_sum / n_test)\n","print(\"average error for gradient_boosting on data is \", gbt_sum / n_test)\n","fig, ax = plt.subplots()\n","x = np.arange(n_test)\n","plt.plot(x, np.array(linear_regression), color=\"black\", label=\"linear_regression\")\n","plt.plot(x, np.array(random_forests), color=\"r\", label=\"random_forest\")\n","plt.plot(x, np.array(gradient_boostings), color=\"b\", label=\"GBT\")\n","plt.xlabel(\"nth test\")\n","plt.xticks(np.arange(0, n_test, step=1))\n","plt.ylabel(\"error\")\n","plt.legend()\n","plt.show()\n","fig.savefig(\"/content/drive/MyDrive/Citadel Datathon/methods_select_team_points.png\")"],"execution_count":294,"outputs":[{"output_type":"stream","text":["testing on 0 rounds is done.\n","testing on 1 rounds is done.\n","testing on 2 rounds is done.\n","testing on 3 rounds is done.\n","testing on 4 rounds is done.\n","testing on 5 rounds is done.\n","testing on 6 rounds is done.\n","testing on 7 rounds is done.\n","testing on 8 rounds is done.\n","testing on 9 rounds is done.\n","average error for linear regression on data is  0.4746339914165735\n","average error for random forest on data is  0.49636351526082656\n","average error for gradient_boosting on data is  0.5353524499369638\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"Cuc-h-Lm8-Ip"},"source":["## Best Model"]},{"cell_type":"code","metadata":{"id":"F0iQ1YhP8-Ip","executionInfo":{"status":"ok","timestamp":1616963080685,"user_tz":240,"elapsed":9836,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}}},"source":["lr_model_1 = LinearRegression().fit(train_x, train_y)\n","print(lr_model_1.intercept_, lr_model_1.coef_)"],"execution_count":295,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"7pHeE1OO8-Ip"},"source":["Factors that are positively related to more points per game are\n","* buildUpPlaySpeed \n","* chanceCreationCrossing\n","* defencePressure\n","\n","and factors that are negatively related are\n","\n","* buildUpPlayPassing\n","* chanceCreationPassing\n","* chanceCreationShooting\n","* defenceAggression\n","* defenceTeamWidth"]},{"cell_type":"markdown","metadata":{"id":"4-YbxnAi86OH"},"source":["# Model 2: Winning"]},{"cell_type":"markdown","metadata":{"id":"dC-e5kkp86OL"},"source":["## Model Selection"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":431},"id":"Fdb_siqA86OL","executionInfo":{"status":"ok","timestamp":1616963080686,"user_tz":240,"elapsed":9833,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}},"outputId":"e1ae3530-f88d-4969-abfa-257eff225889"},"source":["feature_2, target_2 = merge_df.iloc[:, 3:-4] / 100, merge_df.iloc[:, -2]\n","feature_2"],"execution_count":296,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>buildUpPlaySpeed</th>\n","      <th>buildUpPlayPassing</th>\n","      <th>chanceCreationPassing</th>\n","      <th>chanceCreationCrossing</th>\n","      <th>chanceCreationShooting</th>\n","      <th>defencePressure</th>\n","      <th>defenceAggression</th>\n","      <th>defenceTeamWidth</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.52</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.53</td>\n","      <td>0.54</td>\n","      <td>0.43</td>\n","      <td>0.44</td>\n","      <td>0.50</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.52</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.53</td>\n","      <td>0.54</td>\n","      <td>0.43</td>\n","      <td>0.44</td>\n","      <td>0.50</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.52</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.53</td>\n","      <td>0.54</td>\n","      <td>0.43</td>\n","      <td>0.44</td>\n","      <td>0.50</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.52</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.53</td>\n","      <td>0.54</td>\n","      <td>0.43</td>\n","      <td>0.44</td>\n","      <td>0.50</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.45</td>\n","      <td>0.55</td>\n","      <td>0.50</td>\n","      <td>0.60</td>\n","      <td>0.45</td>\n","      <td>0.50</td>\n","      <td>0.45</td>\n","      <td>0.60</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1881</th>\n","      <td>0.69</td>\n","      <td>0.39</td>\n","      <td>0.55</td>\n","      <td>0.59</td>\n","      <td>0.46</td>\n","      <td>0.35</td>\n","      <td>0.37</td>\n","      <td>0.37</td>\n","    </tr>\n","    <tr>\n","      <th>1882</th>\n","      <td>0.65</td>\n","      <td>0.39</td>\n","      <td>0.55</td>\n","      <td>0.59</td>\n","      <td>0.46</td>\n","      <td>0.37</td>\n","      <td>0.39</td>\n","      <td>0.37</td>\n","    </tr>\n","    <tr>\n","      <th>1883</th>\n","      <td>0.65</td>\n","      <td>0.39</td>\n","      <td>0.55</td>\n","      <td>0.59</td>\n","      <td>0.46</td>\n","      <td>0.37</td>\n","      <td>0.39</td>\n","      <td>0.37</td>\n","    </tr>\n","    <tr>\n","      <th>1884</th>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.45</td>\n","      <td>0.45</td>\n","      <td>0.50</td>\n","    </tr>\n","    <tr>\n","      <th>1885</th>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.45</td>\n","      <td>0.45</td>\n","      <td>0.50</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1886 rows × 8 columns</p>\n","</div>"],"text/plain":["      buildUpPlaySpeed  buildUpPlayPassing  ...  defenceAggression  defenceTeamWidth\n","0                 0.52                0.50  ...               0.44              0.50\n","1                 0.52                0.50  ...               0.44              0.50\n","2                 0.52                0.50  ...               0.44              0.50\n","3                 0.52                0.50  ...               0.44              0.50\n","4                 0.45                0.55  ...               0.45              0.60\n","...                ...                 ...  ...                ...               ...\n","1881              0.69                0.39  ...               0.37              0.37\n","1882              0.65                0.39  ...               0.39              0.37\n","1883              0.65                0.39  ...               0.39              0.37\n","1884              0.50                0.50  ...               0.45              0.50\n","1885              0.50                0.50  ...               0.45              0.50\n","\n","[1886 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":296}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":491},"id":"wF265G9l86OL","executionInfo":{"status":"ok","timestamp":1616963086834,"user_tz":240,"elapsed":15977,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}},"outputId":"e561fe24-87a3-466c-f64f-26bbded5c396"},"source":["linear_regression = []\n","random_forests = []\n","gradient_boostings = []\n","lr_sum = 0\n","rf_sum = 0\n","gbt_sum = 0\n","n_test = 10\n","for i in range(n_test):\n","    train_x, test_x, train_y, test_y = train_test_split(feature_1, target_1, test_size=0.2, shuffle=True)\n","    lr_error = lr(train_x, train_y, test_x, test_y)\n","    rf_error = random_forest(train_x, train_y, test_x, test_y)\n","    gbt_error = gb(train_x, train_y, test_x, test_y)\n","    linear_regression.append(lr_error)\n","    lr_sum += lr_error\n","    random_forests.append(rf_error)\n","    rf_sum += rf_error\n","    gradient_boostings.append(gbt_error)\n","    gbt_sum += gbt_error\n","    print(\"testing on \" + str(i) + \" rounds is done.\")\n","print(\"average error for linear regression on data is \", lr_sum / n_test)\n","print(\"average error for random forest on data is \", rf_sum / n_test)\n","print(\"average error for gradient_boosting on data is \", gbt_sum / n_test)\n","fig, ax = plt.subplots()\n","x = np.arange(n_test)\n","plt.plot(x, np.array(linear_regression), color=\"black\", label=\"linear_regression\")\n","plt.plot(x, np.array(random_forests), color=\"r\", label=\"random_forest\")\n","plt.plot(x, np.array(gradient_boostings), color=\"b\", label=\"GBT\")\n","plt.xlabel(\"nth test\")\n","plt.xticks(np.arange(0, n_test, step=1))\n","plt.ylabel(\"error\")\n","plt.legend()\n","plt.show()\n","fig.savefig(\"/content/drive/MyDrive/Citadel Datathon/methods_select_team_win.png\")"],"execution_count":297,"outputs":[{"output_type":"stream","text":["testing on 0 rounds is done.\n","testing on 1 rounds is done.\n","testing on 2 rounds is done.\n","testing on 3 rounds is done.\n","testing on 4 rounds is done.\n","testing on 5 rounds is done.\n","testing on 6 rounds is done.\n","testing on 7 rounds is done.\n","testing on 8 rounds is done.\n","testing on 9 rounds is done.\n","average error for linear regression on data is  0.4797674084383309\n","average error for random forest on data is  0.501448490839057\n","average error for gradient_boosting on data is  0.5409401701896355\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAYgAAAEGCAYAAAB/+QKOAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOzdZ3RUVReA4fck9NCLSi9KCwmEDtKUrvChhqIIQiBIUVBEQBAEpClFQBQp0kWlgygiSJMiLfTegwSQJi1ASEj29+NMQghJCGRm7iQ5z1qzyMzcuXenMHtO20eJCIZhGIYRk5vVARiGYRiuySQIwzAMI1YmQRiGYRixMgnCMAzDiJVJEIZhGEasUlkdgL3kzJlTChUqZHUYhmEYScrOnTuviEiu2J5LNgmiUKFCBAQEWB2GYRhGkqKUOhPXc6aLyTAMw4iVSRCGYRhGrEyCMAzDMGJlEoRhGIYRK5MgDMMwjFiZBGEYhmHEyqEJQinVUCl1VCl1QinVJ5bn/ZRSl5VSe2y3DtGeK6CUWqWUOqyUOqSUKuTIWA3DMIyHOSxBKKXcgQnAK4An0FIp5RnLofNExMd2mxrt8dnAKBEpCVQCLjkizvBw6NULzsQ5E9gwDCNlcmQLohJwQkROiUgoMBd4LSEvtCWSVCLyJ4CIBIvIHUcEeeoUTJ0KNWrAsWOOuIJhGEbS5MgEkRc4G+1+kO2xmJoqpfYppRYqpfLbHisGXFdKLVZK7VZKjbK1SB6ilOqolApQSgVcvnz5qYIsWhTWrYOQEJ0k9u17qtMYhmEkO1YPUv8KFBKR0sCfwCzb46mAGkBPoCJQBPCL+WIRmSIiFUSkQq5csZYSSRAfH9i4EdKkgVq1YNu2pz6VYRhGsuHIBHEOyB/tfj7bY1FE5KqI3LPdnQqUt30dBOyxdU/dB5YC5RwYK8WLw6ZNkCMH1KmjWxWGYRgpmSMTxA6gqFKqsFIqDfAWsCz6AUqp3NHuNgEOR3ttVqVUZLOgNnDIgbECULCgbkkULgyvvAK//eboKxqGYbguhyUI2yf/rsBK9Bv/fBE5qJQarJRqYjvsA6XUQaXUXuADbN1IIhKO7l5ao5TaDyjge0fFGl3u3LB+PZQuDW+8AfPmOeOqhmEYrkeJiNUx2EWFChXEnuW+b96E//1PtyimTIEOHR7/GsMwjKRGKbVTRCrE9pzVg9QuK3NmWLECGjaEd9+FsWOtjsgwDMO5TIKIR4YMsHQpNGsGPXrA559DMmlwGYZhPFay2VHOUdKkgZ9/howZYdAg3fU0ejQoZXVkhmEYjmUSRAKkSgXTpulupzFjdJKYNAncH1m6ZxiGkXyYBJFAbm4wbpxOEkOHQnAwzJ4NqVNbHZlhGIZjmATxBJSCIUMgUyb45BO4fRvmz4d06ayOzDAMw/7MIPVT6N0bJk7UC+kaNdKtCcMwjOTGJIin1Lkz/PAD/PUX1KsH165ZHZFhGIZ9mQSRCK1awcKFsGsXvPQSXLxodUSGYRj2YxJEIr3+uu5qOnECataEf/6xOiLDMAz7MAnCDurVg1Wr4N9/9Z4Sx49bHZFhGEbimQRhJ9Wq6SJ/d+7oJLF/v9URGYZhJI5JEHZUtixs2KAX1tWqBdu3Wx2RYdhPRASsWQOhoVZHYjiLSRB2VrKkrgCbLZveeOivv6yOyDASLzwc/P2hbl147z2rozGcxSQIByhcWCeJAgV0Ndjff7c6IsN4emFhesbezJlQubIuOzNzptVRGc5gEoSD5MmjWw+envDaa7BggdURGcaTCwnR1YznzYNRo2DzZqhdW7cizDhb8mcShAPlzAlr10KVKvDWWzB9utURGUbC3bkDTZrAsmUwYQL07KkLVP70E2TNqhPHzZtWR2k4kkkQDpYlC6xcqftu/f3h66+tjsgwHu/WLb0v++rV+oNN9HGHZ5+FuXPh5Em9mZbZIyX5MgnCCTJk0J/CfH2he3ddDdb8pzJc1bVrem3P5s3w44/Qrt2jx9SsCcOH62KV337r/BgN5zAJwknSptX9uG3awGef6YJ/JkkYrubyZT3GsHu3LiPTsmXcx/bsqfdt//hj2LbNeTEazmPKfTtRqlQwY4YuFz56tG7GT5hgNh4yXMOFC7or9NQp3eJt0CD+493cYNYsKFcOWrTQNcly5HBOrIZzmBaEk7m5wTffQN++MHmyblGEhVkdleuJiIB796yOIuX45x/dbXTmDKxY8fjkEClbNj1D799/4Z139O/NSD5MC8ICSun+28yZdaK4fVsP+qXUjYciIvSAZ0AA7Nyp/921S7ewcuWCfPkgf379b+Qt8n7evJA+vdXfQdJ28qTuVrpxA/78E6pWfbLXV6igd1t87z348kv49FPHxGk4n0kQFurTR3c3de2q+3KXLgUPD6ujciwR3YURPRns3PlgumTatODjoz+NPvssnDsHQUEQGKgXH8a270bOnI8mjuj38+bVEwWMRx0+rFf8h4bqKdnlyj3deTp31r+fzz7TCebll+0bp2ENJclkpLRChQoSEBBgdRhPZdYsaN9efxJr3VqvxC5USN8yZrQ6uqcnAqdPP5wIdu6E69f182nSQJky+vsuX17/6+kZ/z7ft28/SBpnz+p/Y3599eqjr8ue/eHkEfPrvHmTf3KOae9ePVvJzU1PZ/XyStz5goOhYkWdxHfvhty57ROn4VhKqZ0iUiHW50yCcA2LF+t1EpFvnpFy5nyQMGL+W6iQ63RLiej+6+jJICDgwSf+1KmhdOmHk0GpUjpJ2Nvduw+SRczkEXn/ypVHX5ctW+zJo1Yt/TNPTrZv1+MMGTPqAnzFitnnvAcPQqVK+ve7Zo2emGG4NpMgkggRuHRJd6ecPv3g38ivz5x5tJJm7tyxJ4/ChfWbmyPegEX0m2zMbqLIT+6pUoG3t36TiEwIXl66+8hVhITolkhsySPy60uX9LGpU8OHH0L//nrhY1K3caPeSz1XLv0mXqiQfc8/Z47uIuzTB774wr7nNuzPJIhkIiJCT0WMnjyi//vPP7rqZiQ3N911ElcCyZv38Z/wRPSbZcyWQeQn8FSp9Jt/ZKugfHmdHFylZZMYISH65zpqlJ6enDMnDBumuwOT6tTkP//UtcEKFtTdSnnzOuY6nTrBlCnw66/QuLFjrmHYh0kQKcT9+/pTcVwJJCjo4cV5qVLpVkbMxJEhA+zZ8yAZRH6SdnfX3ULRk0Hp0iljFtHOnXoV/KZNetxk3Di9D3lS8uuvun5SiRI6UTzzjOOuFRICL76o/+527bJ/K8WwH5MgDEB3T509+3C3VfR///33wbFubnrAOPqYQZkyKSMZxEVEz/nv1Uu31nx9deuiSBGrI3u8BQvg7bf1DLGVK/WgvaOdOqVnRRUtqhOrK3UxGg+YBGEkyN27epzj1i2dHFLarJ6EunsXvvpK96/fvw89eui5/5kyWR1Z7GbP1vWUqlaF5cudO46ydCm88Qa8/76p2eSq4ksQDl1JrZRqqJQ6qpQ6oZTqE8vzfkqpy0qpPbZbhxjPZ1ZKBSmlzJ+WE6RPr7sfKlY0ySE+6dPrAevjx3UZ9y+/1LOAZsxwvZXEkydD27Z6XcLKlc4fZH/9dV2zacIEvRjUSFocliCUUu7ABOAVwBNoqZTyjOXQeSLiY7tNjfHcEGCDo2I0jMTIk0evYdm2TY/dtG+vk+vGjVZHpo0dqxewNWoEv/1mXdIfPhyqV4cOHeDIEWtiMJ6OI1sQlYATInJKREKBucBrCX2xUqo88CywykHxGYZdVKr0oDT2pUu6ptGbb+ruOqsMG6a7vpo102tsrJxVljq1bj1kyKDjuX3buliMJ+PIBJEXOBvtfpDtsZiaKqX2KaUWKqXyAyil3ICvgJ7xXUAp1VEpFaCUCrh8+bK94jaMJ6aUHgQ+cgQGDtQzhkqU0KUngoOdF4cI9Ounu8Bat4aff3bMWpgnlTev3onu0CHo0iXpl7oPD9ebf/n76zGp5Mrqaq6/AoVEpDTwJzDL9vh7wO8iEhTfi0VkiohUEJEKuXLlcnCohvF4Hh4waBAcPapnOQ0dCsWLww8/OH58QgQ++kh36bz7ru7+cqWVzHXr6p/NDz/A1JidyUnIiRN6inP37nq3vRYtknFFZhFxyA2oCqyMdr8v0Dee492BG7avfwT+AQKBK8BN4Mv4rle+fHkxDFfz998iFSuKgEilSvq+I4SHi3TsqK/z4YciERGOuU5ihYeL1K8vkjatyK5dVkfzZMLDRcaPF0mfXiRLFpFZs0QmTtQ/81at9PNJERAgcb0vx/VEYm/oSrGngMJAGmAvUCrGMbmjff0GsDWW8/gB3z7ueiZBGK4qPFy/meTOrf/Hvf22yD//2O/8YWEirVvrc3/6qesmh0iXLonkzStSpIjItWtWR5MwJ0+K1Kqlf8avvCISFPTgueHD9eNdu7r+zz42liQIfV1eBY4BJ4F+tscGA01sX38BHLQlj3VAiVjOYRKEkSzcuiXSr5/+9Jw+vcigQSK3byfunPfuiTRtqv8nDx1qnzidYfNmkVSpRF5/3bXfVMPDRb77TsTDQyRzZpFp0x6NNyJC5OOP9e9g4EBLwkwUyxKEM28mQRhJRWCgSIsW+n9fvnwiP/74dG+Sd++KNGqkzzN2rP3jdLQxY3TsX31ldSSxCwwUqVNHx1ivnsiZM3EfGxEh0r69PnbcOOfFaA8mQRiGC9qwQaRcOf2/sGpVke3bE/7a4GCRunX1aydNclyMjhQRIeLrq1sSmzZZHc0DEREiU6aIZMokkjGjyOTJCUvgYWH6+wHdpZhUmARhGC7q/n3dbfHss/p/Y5s2IufOxf+aGzdEqlcXcXNLWm9Esbl+XeT55/WYxKVLVkejx4YaNNC/i9q1RU6ffrLXh4ToVoe7u8jSpQ4J0e7iSxBWT3M1jBTN3V2vwD52DD75RC8oK1ZML3SLbX79f//pLUK3btXHtmnj/JjtKUsWWLhQl49v1erhcvXOJKJLpXh56ZXwEyboirdPWoU2bVpdf6pCBb1Yct06h4TrPHFljqR2My0IIzk4ceJBN0XBgiLz5j3o3rh4UaR0aZE0aUSWLbM0TLv7/nv9PQ8a5PxrBwWJvPqqvn7NmnrGUmJduSJSqpTuotqxI/HncyRMC8Iwkobnn4dFi2DtWv3p+s039ZanK1bof48f13WV/vc/qyO1L39/XVTw889hlZOK64joRXteXvqT/tdf63/tUb49Rw79feTMCQ0bwuHDiT+nFUy5b8NwUeHhMG2aLptx+bLeP/r336FGDasjc4w7d6ByZb0vye7dek9wR/n3X73r3bJlUK2a7l4qWtT+1zlxQhcqTJ1a74lRsKD9r5FYlpX7Ngzj6bm7Q8eOutXwxRfw11/JNzmALua3cKHeje7NNx1TvkJE16cqVUp/wv/qK/1zdURyAHjhBX2d4GCoV+/B7oxJhUkQhuHismSBPn307mzJXfHiuk7T33/r79meLl3S1WTfflsnhN27dcVbR+8vXrq03qgpKAgaNIAbNxx7PXsyCcIwDJfy5pvQtSuMGQNLltjnnAsW6FbDb7/BiBG6PHuJEvY5d0K8+KL+Xg4e1ONHd+4479qJYRKEYRguZ/RovfmSnx+cPPn057lyRSecFi30lNXdu6F3b8e3GmLToAHMmaPHIpo3TxoVYE2CMAzD5aRNqz/1u7vrbqGn2XNhyRLdaliyRK8r2bJF77VupRYtYNIkPdnAz8/1tqiNySQIwzBcUsGCehrqnj3w4YcJf93Vq3rRna+v3qho50749FPX2RujY0c96eCnn+CDD1x78ySTIAzDcFmNGkHfvvD99zB79uOPX7ZMr2uYP1+vqdi2Dby9HR/nk/rkE+jVS6/YHjjQ6mji5iI51TAMI3aDB+tZTZ0765lcXl6PHnPtmt7hbfZsPWtoxQrw8XF+rAmllB4s/+8/GDIEsmXTuwG6GtOCMAzDpaVKpetOZcmixyNu3Xr4+d9/10njxx/1HuA7drh2coikFEyerL+nHj1g5kyrI3qUSRCGYbi8557TC9yOH9d9+CJ6PYG/v+6GypZNdycNHgxp0lgdbcK5u+uZTfXq6e9l6VKrI3qYSRCGYSQJL70EQ4fq1kTXrrrVMHOmHqPYuRPKl7c6wqeTNi0sXgyVKukpuWvXWh3RAyZBGIaRZHzyCbz6Knz3na5NtWULDB+u32STsowZ9WrrYsXgtdd0N5krMAnCMIwkw81NTw+dPVsveqtUyeqI7Cd7dl23KVcueOUVOHTI6ohMgjAMI4nJkgXeeQfSpbM6EvvLnVtvVJQ6NdSvD4GB1sZjEoRhGIYLef553ZK4fVsPXl+8aF0sJkEYhmG4GG9vPX33/Hldw+n6dWviMAnCMAzDBVWtqutIHToEjRtbUwHWJAjDMAwXVb++HpTfskUvqAsNde71TYIIC9M/+b/+sjoSwzCMRzRrpldcr1ih9+0OD3fetU2COHsWdu3Sq3DefVcXdTEMw3AhHTro2k1z50K3bs6rAGsSRJEicOCALq04YwaULKk3xnXlGryGYaQ4vXvrhYITJ+qaU85gEgTo3dJHjtTLF/Pm1ds9vf663kTWMAzDRXzxhe7oGDYMvvrK8dczCSK6smV1xa/Ro/VqFU9PXbDd1bd9MgwjRVBKtyCaN4eePXWnhyOZBBFTqlTw8ce626lKFV0VrHp1vdu4YRiGxSIrwNavr8cmlixx3LVMgohLkSKwcqUu+nLsmG5dDBgA9+5ZHZlhGClcmjS6AmzlyvDWW7BmjWOu49AEoZRqqJQ6qpQ6oZTqE8vzfkqpy0qpPbZbB9vjPkqpLUqpg0qpfUqpNx0ZZ5yU0kVfDh/Wu40PGaJ3Itm0yZJwDMMwInl46AqwxYvr3egcMf3VYQlCKeUOTABeATyBlkopz1gOnSciPrbbVNtjd4A2IlIKaAiMU0pldVSsj5Url27T/fEHhIRAjRp6/8MbNywLyTAMI1s23dHxxx+668neHNmCqAScEJFTIhIKzAVeS8gLReSYiBy3fX0euATkclikCdWggR6b6NFD76JesqRu5xmGYVgkd27Ik8cx53ZkgsgLnI12P8j2WExNbd1IC5VS+WM+qZSqBKQBTsbyXEelVIBSKuDy5cv2ijt+Hh56ftm2bfDss9C0Kfj66qpahmEYyYjVg9S/AoVEpDTwJzAr+pNKqdzAD0A7EXlkrqmITBGRCiJSIVcuJzcwKlSA7dvhyy/1GviSJWHSJDMl1jCMZMORCeIcEL1FkM/2WBQRuSoikdOCpgJRu8oqpTIDy4F+IrLVgXE+vdSp9dLG/ft1wujSBWrV0oPahmEYSZwjE8QOoKhSqrBSKg3wFrAs+gG2FkKkJsBh2+NpgCXAbBFZ6MAY7eOFF2D1ar1q5eBBPdPp88/NlFjDMJI0hyUIEbkPdAVWot/454vIQaXUYKVUE9thH9imsu4FPgD8bI+3AGoCftGmwPo4Kla7UAr8/HTrwdcXBg2CcuXg77+tjswwDOOpKEkmRekqVKggAQEBVofxwO+/6y6ns2f1v198AZkzWx2VYRjGQ5RSO0WkQmzPWT1InXy9+qrubvrgA108xdMTfvnF6qgMwzASzCQIR8qYEcaN09tBZc+uK8Q2awYXLlgdmWEYxmM9NkEo7ZH1CcYTqFwZdu7UNXp/+01Pif3+ezMl1jAMl/bYBCF6kOJ3J8SSvKVODZ9+Cvv26cJ/HTvCyy/D0aNWR2YYhhGrhHYx7VJKVXRoJClFsWKwdi1MnaqTRZkyumXh7N3IDcMwHiOhCaIysEUpddJWFmO/UmqfIwNL1pQCf389JbZJE+jfH8qXh62uuR7QMIyUKVUCj2vg0ChSqueeg/nz4ddf4b33oGpVvTlRq1Z6y6gcOayO0DCMFCxBLQgROQNkBf5nu2W1PWbYw//+p6fEDh8OV6/qdRO5c8Nrr+kEcveu1REahpECJShBKKU+BH4EnrHd5iilujkysBQnc2bo21cnil279PqJHTvgzTd11dh27XQ5D0fsCmIYhhGLBK2kto03VBWR27b7HsAWWxVWl+ByK6ntITwc1q+HH3+ERYvg5k3dsmjZUndDlS2rxzMMwzCekj1WUisg+kfXcNtjhiO5u0OdOjB9Ovz7r+5uqlQJvvlGD2p7esLQoXD6tNWRGoaRDCU0QcwAtimlBimlBgFbgWkOi8p4VPr0euB66VKdLCZN0luhfvYZFCkC1arpkh5XrlgdqWEYycRju5iUUm5AFSAEqG57eKOI7HZwbE8kWXYxJcSZM/Dzz3rP7IMHIVUqaNhQd0E1aQIZMlgdoWEYLiy+LqaEjkHsFpGydo/MjlJsgogkohfe/fgj/PQTnDuna0H5+kLr1lC7tmN2NTcMI0mzxxjEGqVUU6XMiKjLUkqvyh45Urcq1q7VM6B++QXq14d8+eCjj3RNqGRS4t1wsjNn9KLOf/+1OhLDSRLagrgFeAD30V1NCl2myWU2OEjxLYi4hITA8uW6ZbF8uS7pUby47oJq1UqPXxhGfMLCYOxYvUvinTu6VbpokdVRGXaSqBaEbQyioYi4iUgaEcksIplcKTkY8UiXDpo2hcWL9Se/KVP0Cu4BA+D55+HFF2HCBLh82epIDVe0aZOeTv3JJ7ol2qOH/ltavtzqyAwnSEg11wjgWyfEYjhatmzw7rt6bcWZM/DllxAcDF27Qp480LixHvC+c8fqSA2rXbmi64XVqAG3bumuyiVL9M6Inp76b8b8nSR7ZgwipSpQQH8q3LdP3z7+GPbuhbff1uMVc+aYsYqUSARmzIASJWD2bP03cuiQnhEHkCYNfPcdBAbqKsRGspbQBNEJmA/cU0rdVErdUkrddGBchjN5e+vWxJkzunVRsiS8847e/c50PaUcBw9CrVrQvr1OELt3678LD4+Hj6tVC9q2hVGjdEViI9lKaILIAvgBQ21jD6WAeo4KyrCIm5v+z79hg54N9dtvUKqUXpxnJF937ug6YD4+OklMm6b/Bry84n7NqFF6GvV775mWZjKW0AQxAb1YrqXt/i3MuETy5e4OvXrpKbH58sEbb0CbNnD9utWRGfa2fLn+EPDll7rVePSobkG4PeatIVcu/Zr163V3pJEsJXjDIBF5Hz3FFRG5BqRxWFROtm7dOu7fv291GK7Hywu2bYOBA/XiOy8vWLXK6qgMewgK0rPbGjfWq+3/+kvX/MqZM+Hn6NABqlTR41f//ee4WA3LJDRBhCml3AEBUErlAiIcFpUTHT16lLp161KxYkW2mh3dHpU6NQwapHe7y5wZGjTQ+1UEB1sdmfE07t/XaxpKloQVK3QrYPduqFnzyc/l5qZrgv33n95v3Uh2EpogxgNLgGeUUsOATcBwh0XlRMWKFWP+/PlcvnyZF198kU6dOvGf+TT0qAoV9D4VPXvC5Ml61fbGjVZHZTyJrVv177FHDz3WdOiQnqWUJhGdAWXK6L1LpkzRrU0jeRGRBN2AEsD7QFegZEJf56xb+fLlJTFu3rwpH330kbi7u0uuXLlk1qxZEhERkahzJlsbNogUKSKilMjHH4vcvWt1REZ8/vtPpFMn/fvKl09k8WIRe/5t37wpkjeviI+PSFiY/c5rOAUQIHG978f1RFK7JTZBRNqzZ49UqVJFAHnppZfk0KFDdjlvsnPrlkiXLvpPqGRJkR07rI7IiCkiQuSHH0SeeUbE3V2kRw/9Zu4ICxfqv4WxYx1zfsNh4ksQCe1iSjHKlCnD5s2bmTx5Mnv37qVMmTJ8+umn3DGrRh+WMaNeMLVypd7prkoVPZgdGmp1ZAbAkSN6s6l33oHChSEgAL76CjJlcsz1fH3hlVf0/iTnzjnmGobzxZU5ktrNXi2I6C5evCht27YVQAoVKiS//fab3a+RLFy7JtKmjf4EWbasyP79VkeUct25I9K/v0jq1CJZs4pMmiQSHu6ca588KZIunUjz5s65nmEXmBbE03nmmWeYOXMm69evJ3369DRu3BhfX1/Onj1rdWiuJWtWmDVL1+o5d05vhzpypN5T23CelSv1VOShQ+Gtt3QrolOnx69psJciRXQ58AUL4I8/nHNNw7HiyhxJ7eaIFkR09+7dky+++ELSp08vHh4eMnr0aAkNDXXoNZOkS5dEfH11a6JqVZFjx6yOKPk7d06kRQv9My9eXGTNGutiCQnRMRQpolszhsvDqkFqoCFwFDgB9InleT/gMrDHdusQ7bm2wHHbre3jruXoBBHp9OnT0rhxYwHE29tbNm/e7JTrJikRESI//qi7ONKnF/nmG+d1c6Qk9++LjB8vkimTSNq0IkOG6Ddoq61Zo99aPvvM6kiMBLAkQQDuwEmgCHrV9V7AM8YxfsC3sbw2O3DK9m8229fZ4ruesxKEiEhERIQsWbJE8uXLJ4D4+/vLlStXnHb9JCMoSKRhQ/1nVqeOyJkzVkf0ZCIiRI4fF9m1SyQwUM/ccpWpzzt2iJQvr3+29evrOF1J69Z6HOTIEasjMR4jvgSRoB3lnoZSqiowSEQa2O73tXVpfRHtGD+ggoh0jfHalsBLItLJdn8ysF5Efo7relbsKBccHMznn3/O2LFjyZo1K6NGjcLPzw9TFT0aEZg6VS/OcnODcePAz09vkepqIiL04rENG3TpiQ0bHt1eM00ayJEDsmfX/0beYt6P/lj27IlbjBbdjRu6n3/CBL3x07hx0Ly56/08L17UFWHLlYPVq10vPiNKfDvKOTJBNEPvRNfBdv8ddE2nrtGO8QO+QHczHQM+EpGzSqmeQDoRGWo77jPgroiMjnGNjkBHgAIFCpQ/c+aMQ76Xx9m/fz9dunRh8+bNVK9enYkTJ+IVXyXMlOj0aWjXTr/x/u9/D3a2s1J4uN4DIzIZbNwIV6/q5/Lm1auNa9aEZ57Rj1+9qstKRH4d835YWNzXypTp8Ukl5v0sWR4MMIvAvHl6X/FLl+D992HIEH2Mq5o4UVd7/fFHvc+I4ZJcOUHkAIJF5J5SqhPwpojUTmiCiM7qPakjIiKYMWMGvXv35ubNm/To0YMBAwbgEbOWfkoWEQHjx+vS0hky6DeQFi2cd/2wML0eYMMGfdu0Sa/hAD0Dp2bNB0mhcOEn+9QrArdvx73JP0sAACAASURBVJ08Yt6P/PratbjLZbu56V0Ac+TQFXYPH9YzxCZN0iUzXF14uN7SNjBQV4nNmtXqiIxYWJUgHtvFFON4d+A/EcmSVLqYYnPlyhU++eQTpk+fToECBfjmm29oErkbl6EdOaI3nNm+XU/H/PZb/SZobyEhuj5QZAthy5YH22SWKPEgGdSsqcuaWyE8XJdRjy15RL9//bpueXXurJNFUrF7t05mnTvrbjHD5cSXIBw5SJ0KPbhcmAeD1KViHJM72tdvAFvlwSD1afQAdTbb19nju54zB6kTYuPGjVKqVCkBpEmTJhIYGGh1SK4lLExk6FA9kPnccyL2WIR465bIqlUi/fqJ1KghkiaNHsRVSqRMGZFu3XRJiIsXE38tI+E++ED/DrZvtzoSIxZYOM31VfTYwkmgn+2xwUAT29dfAAdtyWMdUCLaa9ujp8eeANo97lquliBEREJDQ2XkyJGSIUMGyZAhg4wYMcKsnYhp924Rb2/9p9i+vciNGwl/7bVrIr/+KtKrl0ilSrreEOh/K1YU6dlTZNkyXazOsM6NGyK5c4uUK6en5houxbIE4cybKyaISIGBgfLaa68JIKVKlZINGzZYHZJrCQkR6dtXxM1NpECBuBd6XboksmiR/kTq46M/lYJuKVSvLvLppyIrVzquIJ3x9ObN07+r8eOtjsSIIb4E4bAxCGdzlTGI+Pz6669069aNM2fO0K5dO0aOHEnOJ9nBK7nbulWPTRw7Bt26wYcfwo4dD8YQDh3Sx6VPrwc/I8cPKlfWjxmuSwQaNtS/4yNHIHduqyMybCwZpHa2pJAgAG7fvs2QIUP46quvyJw5MyNGjKB9+/a4Oatejqu7c0fPcho//sFjmTJB9eoPZhmVL2+/dQWG85w4oWtFvfEG/BznfBPDyUyCcEEHDx6kS5cubNy4kRdffJGJEydSunRpq8NyHZs26RkwL76ody1LlcrqiAx7GDxYl4VftQrq1bM6GgOTIFyWiDBr1ix69erFtWvX6N69OwMHDiSTo2r2G4bV7t0Db2/d5bR/P6RLZ3VEKV58CcL0a1hIKYWfnx9HjhyhXbt2fPXVVxQrVoyZM2cSERFhdXiGYX9p0+qNpk6cgBEjrI7GeAyTIFxAjhw5+P7779m2bRuFChWiXbt2VK5cmb///tvq0AzD/urWhZYtYfhwOH7c6mie3p07enV7Mv4wZxKEC6lUqRKbN29mzpw5nD9/nmrVqtGqVSuCgoKsDs0w7GvMGN299P77cZcacWV//627yjw94dlndcKbPh2S2WZiJkG4GDc3N1q1asXRo0fp378/ixYtonjx4gwePNjsi20kH889B8OGwZ9/wvz5VkeTcGFhuppujRo6sX3zDbz6KqxfD/7+UKAAlCypp2gvXw7BwVZHnChmkNrFBQYG0qtXLxYuXEiBAgUYNWoUzZs3NyXFjaQvPFyvYTl3Tq+NcOXKtKBjbN0adu7UlYnHjYPMmfVzInDggE54q1bpdTt370Lq1HomXr16UL++Ln/uYrW0LKnF5OybK6+ktof169dLmTJlBJAaNWrIrl27rA7JMBJvxw69Ir5bN6sjiVtEhMi33+rdEXPk0Kv5H+fuXZHVq0U++USkbFm9ihxEsmcXad5c5Pvv9SZULgBTaiN5uH//vkyePFly5swpSinp0KGDXDSF54yk7v33dZmVnTutjuRRFy6IvPKKfqts2FDk/PmnO8/FiyI//STi5yeSN++DhFGsmP7+f/nlyeqQ2VF8CcJ0MSVB169fZ/DgwXzzzTdkyJCBAQMG0K1bN9KY1cVGUnTjhi6/nj+/LsnuKl0wS5bAu+/qfT5Gj9abH9mja1dEz36K7I5av17PiEqVCqpU0V1R9erpMulOWCBqupiSqSNHjsirr74qgBQtWlR+/fVXiXCVPZMN40n89JP+RD1hgtWR6GKP7drpeMqXFzl82LHXCwkRWbdOF5usUOFBEcqsWUV8fUUmTRI5edJhl8d0MSVvy5cvl+LFiwsgDRo0kEOHDlkdkmE8mYgIkTp1RLJk0d06Vtm0SaRwYd3l1a+fyL17zo/hyhVd/dbfXyR//gfdUc8/L9Kli8jixbrUvZ2YBJEC3Lt3T8aMGSNZsmQRd3d3+fDDD+U/sw+CkZQcPapLt7dq5fxrh4bqhODmphPEpk3OjyE2EREiR46IfPONyP/+J5Ixo0TteVK1qsjAgTrWsLCnvoRJECnIpUuXpFOnTqKUkhw5csh3330nYYn44zEMpxowQL8trV7tvGsePqy7kkB3LVk0WJwgoaEiGzaI9O8vUrmyTmig90d5SvElCDNInUzt2bOH7t2789dff+Ht7c24ceOoXbu21WEZRvxCQnRJcHd32LdP125yFBFdF6pXL8iQAaZMAV9fx13PEa5dg7VrdRHEt99+qlOYYn0pkI+PD+vWrWPhwoXcvHmTOnXq0LRpU06dOmV1aIYRt3TpYMIEvWnUqFGOu86FC3oFdNeueo+R/fuTXnIAyJYNmjZ96uTwOCZBJGNKKZo2bcrhw4cZOnQof/zxB56ennz66afcunXL6vAMI3YNGkCLFjB0KJw8af/zL1mi6yitX6+T0e+/mx3u4mASRAqQPn16+vXrx7Fjx2jRogVffPEFxYsXZ/bs2aasuOGaxo7VuwZ27Wq/Yn63bkH79rqlUKiQ3pDKXmsbkimTIFKQvHnzMnv2bLZs2UL+/Plp27YtVatWZevWrVaHZhgPy5NHtyD++AMWLUr8+TZv1jsTzpoF/frpaqwlSiT+vMmcSRApUJUqVdiyZQuzZs3i7NmzVK1alXfeeYdz585ZHZphPPDee1C2rK6M+rRdopHVV2vW1Pc3bNCJx1QdSBCTIFIoNzc32rRpw9GjR+nbty/z58+nWLFiDBs2jLt371odnmHoMhOTJukB5QEDnvz1R45A1aq6rLifH+zdC9Wq2T3M5MwkiBQuU6ZMDB8+nMOHD9OwYUP69++Pp6cnixcvJrlMgTaSsEqVoHNnGD8e9uxJ2GtE9OBzuXIQGAiLF8O0aWD2en9iJkEYABQpUoRFixaxZs0aMmbMSNOmTalfvz6HDx+2OjQjpRs+HHLm1InicZMqYpu++sYbzokzGTIJwnhI7dq12b17N+PHjycgIIDSpUvTo0cPbty4YXVoRkqVNSt89RVs2wbffx/3cZHTV//6y0xftZNkvZI6LCyMoKAgQkJCLIoqaQsPD+f69esEBwfj5uZGtmzZ8PDwcKnd7NKlS0e+fPlInTq11aEYjiQCderoqalHj8Izzzx47tYtPZA9YwaULw9z5pgZSk8gvpXUji82bqGgoCAyZcpEoUKFXOpNLam5ffs2//zzD7dv30YpRYECBfDw8LA6LESEq1evEhQUROHCha0OJ1kLCwtj3LhxjB07lm+//RZfZ686VkqXxShdWpfGmDVLP755M7zzDpw5o6evDhyot/k07CJZdzGFhISQI0cOkxwSycPDgxIlSlC4cGFCQ0M5fPgwgYGBhIWFWRqXUoocOXKYFqKDbdmyhfLly9O7d29CQkJo27atNWNTJUpA794we7bebCe26asmOdhVsk4QgEkOdhL5Zuzl5cVzzz3H1atXOXDgABcvXrR0Nbb5/TrOtWvX6Ny5M9WqVePatWssWbKEffv2kSFDBnx9fa0p19KvHxQurMtxmOmrDpfsE4RhX+7u7uTLl49SpUrh4eHB2bNnOXToEDdv3rQ6NMNORISffvqJEiVK8P3339O9e3cOHTrE66+/Tr58+Zg3bx7Hjx+nXbt2zp8KnT49TJ0KpUqZ6atO4NAEoZRqqJQ6qpQ6oZTqE89xTZVSopSqYLufWik1Sym1Xyl1WCnV15FxGk8uXbp0FC1alBdeeAER4dixY5w4cYJ79+5ZHZqRCCdOnKB+/fq0atWKggULEhAQwJgxY8gU7U34pZdeYsSIESxatIjRo0c7P8jatc30VSdxWIJQSrkDE4BXAE+gpVLKM5bjMgEfAtuiPdwcSCsi3kB5oJNSqpCjYnWkjBkzAnD+/HmaNWtmcTT2pZQia9aslCpVirx583Lz5k0OHDjA+fPnH9vtNGDAAFavXu2kSI3HuXfvHkOGDMHLy4vt27fz7bffsmXLFsqWLRvr8T169KB58+b06dOHtWvXOjlaw1kcOYupEnBCRE4BKKXmAq8Bh2IcNwQYAfSK9pgAHkqpVEB6IBRIVB9G9+7d2ZPQlZgJ5OPjw7hx4xJ0bJ48eVi4cKFdrx/T/fv3SZUq/l9pQo550te7ubmRO3ducuTIwdmzZzl//jxXrlwhf/78ZM2aNdZxgsGDBz91DIZ9rV+/ns6dO3P06FFatGjB2LFjyZMnT7yvUUoxbdo0Dhw4wJtvvsmuXbvInz+/kyI2nMWRXUx5gbPR7gfZHouilCoH5BeR5TFeuxC4DVwA/gFGi8h/MS+glOqolApQSgVcvnzZrsHbW2BgIF5eXgDMnDkTX19fGjZsSNGiRendu3fUcatWraJq1aqUK1eO5s2bExwcDOg31IoVK+Ll5UXHjh2j+n5feuklunfvToUKFfj6669jvbafnx+dO3emcuXK9O7dm5MnT9KwYUPKly9PjRo1OHLkCAAnT56kSpUqeHt7079//6jWz/r166lRowZNmjTB09OT8PBwevXqRcWKFSldujSTJ08G4OrVq7Rr14727dvTtGlTFi5cyOHDh3nnnXfw8vLC29ubsWPHRsUUmTDXrFlD2bJl8fb2pn379lHdVIUKFWLgwIGUK1cOb2/vqDgN+7h8+TJ+fn68/PLLhIaGsmLFCubNm/fY5BApU6ZMLFmyhHv37tGsWTPTvZgcxbUXaWJvQDNgarT77wDfRrvvBqwHCtnurwcq2L6uBvwIpAaeAY4CReK7Xmx7Uh86dOip92m1Fw8PDxEROX36tJQqVUpERGbMmCGFCxeW69evy927d6VAgQLyzz//yOXLl6VGjRoSHBwsIiJffvmlfP755yIicvXq1ahztm7dWpYtWyYiIrVq1ZIuXbrEG0Pbtm2lUaNGcv/+fRERqV27thw7dkxERLZu3Sovv/yyiIg0atRIfvrpJxERmThxYlTs69atkwwZMsipU6dERGTy5MkyZMgQEREJCQmR8uXLy6lTp2T06NEydOhQEREJCwuTkydPypw5c6RSpUryzz//SFhYmFy7di0qpgULFsjdu3clX758cvToUREReeedd2Ts2LEiIlKwYEEZP368iIhMmDBB/P39Y/3+XOH3nJSEh4fL1KlTJXv27JIqVSrp27ev3L59+6nPt3jxYgGkU6dOdozScBbi2ZPakS2Ic0D0Nmc+22ORMgFewHqlVCBQBVhmG6h+G/hDRMJE5BKwGYh1pV9SVadOHbJkyUK6dOnw9PTkzJkzbN26lUOHDlGtWjV8fHyYNWsWZ86cAWDdunVUrlwZb29v1q5dy8GDB6PO9eabbz72es2bN8fd3Z3g4GD+/vtvmjdvjo+PD506deLChQuAnu/evHlzAN6OsYVhpUqVohajrVq1itmzZ+Pj40PlypW5evUqx48fp2LFisyYMYNBgwZx4MABihQpQr169fj333/p2bMnkydPJjQ09KGZL0ePHqVw4cIUK1YMgLZt27Jhw4ao5yMXZJUvX57AwMAn/TEbMRw6dIiXXnqJDh064OnpyZ49exg+fDgZMmR46nO+8cYbfPLJJ0yePJkZM2bYMVrDao4cg9gBFFVKFUYnhrfQb/wAiMgNIGfkfaXUeqCniAQopeoAtYEflFIe6OSRsM7+JCJttM3Y3d3duX//PiJCvXr1+Pnnnx86NiQkhPfee4+AgADy58/PoEGDHloclpBVzZHHREREkDVr1icej4l+DRHhm2++oUGDBo8ct2HDBpYvX46fnx89evSgTZs2HDx4kF9++YUZM2awcuVKRowYwf379xN03cifU+TPyHg6d+/eZejQoYwaNYpMmTIxdepU2rVrh5ubfT4jDh06lICAALp06UKZMmUoV66cXc5rWMthLQgRuQ90BVYCh4H5InJQKTVYKdXkMS+fAGRUSh1EJ5oZIrLPUbG6iipVqrB582ZOnDgB6BIXx44di0oGOXPmJDg4OFGD3ZkzZ6Zw4cIsWLAA0G/2e/fujbr+ItvuXXPnzo3zHA0aNGDixIlRK6mPHTvG7du3OXPmDM8++yzvvvsuHTp0YNeuXVy5coWIiAhatWrF2LFjOX36NKGhoVy/fp1Lly5RpEgRAgMDo77nH374gVq1aj3192c86o8//sDLy4vhw4fTsmVLjhw5gr+/v92SA0CqVKn4+eefeeaZZ/D19eXq1at2O7dhHYfWYhKR34HfYzwW684fIvJStK+D0VNdU5RcuXIxc+ZMWrZsGTXgN3ToUIoVK8a7774btYq5YsWKibrOjz/+SJcuXRg6dChhYWG89dZblClThnHjxtG6dWuGDRtGw4YNyZIlS6yv79ChA4GBgZQrVw4RIVeuXCxdupT169czatQoUqdOTcaMGZk9ezbnzp2jXbt2UdNeR44ciZeXF+nTp+fWrVucOHGCMWPG0Lx5c+7fv0/FihXp3Llzor4/Q7tw4QLdu3eP2gxq7dq1vPzyyw67Xq5cuVi0aBHVq1enVatWLF++HHd3d4ddz3CCuAYnktrNVQepk5Lbt29LRESEiIj8/PPP0qRJE4de7+7du3Ls2DHZsWOH7N+/X27cuPFU5zG/54fdv39fvv32W8mcObOkTZtWPv/8cwkJCXHa9adMmSKA9O/f32nXtMLVq1dlw4YNEh4ebnUoiUI8g9TJupqr8WR27txJ165dERGyZs3K9OnTHXq9dOnS8cILL3Djxg3Onj3LsWPHyJo1K/nz539ojMZIuD179tCpUye2b99OnTp1mDhxIkWLFnVqDB06dGDr1q0MHTqUihUr0qTJ43qUk56jR4/yyiuvcPr0aQoWLEi7du1o164dBQoUsDo0u0rW+0EcPnyYkiVLWhSR8w0bNixqbCFS8+bN6devn0URJVxERAQXL17kwoULiAjPPfcczz333COL7GL+vYoIR48eJU+ePA5rnebIkYOcOXPiyoKDgxk4cCBff/01OXLkYMyYMbz99tuWFTMMCQmhevXqHD9+nICAAKcnKUfauHEjr732GqlTp+azzz5j2bJlUVUB6tevj7+/P02aNEkyH3Li2w/CJAjDpYSGhhIUFMR//z2yLjJOV65c4ZVXXnFgVJA9e3aKFy/+yO2FF14gTZo0Dr324yxdupRu3boRFBREx44d+fLLL8mWLZulMYFeHFq+fHny5MnD1q1bXWIPkcSaO3cubdu2pXDhwqxYsSJq6ndgYCAzZsxgxowZnD17lhw5ctCmTRv8/f0pVaqUxVHHzyQII8kJDg6OtZx0bJ+Iz5w5w5YtW1BK2eXm5uYW9TXAxYsXOXr0aNQtct0I6DIjhQsXpkSJEo8kj2effdahn+D/+ecfunXrxrJly/Dy8mLy5Mm8+OKLDrve01i1ahUNGzakZcuWzJkzJ8mWZxcRRo4cSZ8+fahZsyZLliwhe/bsjxwXHh7On3/+ybRp0/jll18ICwujSpUq+Pv78+abbz5U9NBVxJcgLB9cttfNDFKnXM7+Pd+4cUN27NghP/zwg/Tv31+aN28upUuXlnTp0gm6jpgAkjlzZqlYsaK0bt1ahgwZIgsWLJB9+/bJ3bt3E3X9sLAwGT16tHh4eEj69OllxIgREhoaaqfvzv6GDRsmgHz99ddWh/JUwsLCpFOnTgJIy5YtEzzgf+nSJfnqq6/E09NTAPHw8JD27dvL33//HTUZxBUQzyC15W/s9rqZBJFyucrvOTw8XAIDA2XlypUyfvx4ef/996VOnTqSL1++hxKHUkoKFSokDRo0kA8++EAmTJggq1evlrNnzz72jWPr1q1SpkwZAaRRo0Zy+vRp53xziRAeHi5NmjSRVKlSycaNG60O54ncunVLXn31VQGkb9++TzVjKSIiQv7++2/x9/cXDw8PAaRkyZIyevRouXTpkgOifjLxJQjTxWQkeUnh9xy56DF6V1Xk7fbt21HHZcyYkWLFisXaXTVs2DAmTpxI7ty5GT9+PL6+vkmmy+bGjRtUqFCB4OBgdu3aRe7cua0O6bEuXLhA48aN2bt3L9999x0dO3ZM9Dlv3brF/PnzmTZtGlu2bCF16tQ0adIEf39/6tevb8m6EdPFlIwULFhQLl++7JBzh4SESJ06daRMmTIyd+5ch1xjyZIlcvDgQbueMyn/niMiIiQoKEhWr14tEyZMkA8++EAaNGgghQoVEqXUQy0PNzc3+eCDD556vYjV9u/fLxkyZJDq1au7dJeYiMiBAwekQIEC4uHhIb///rtDrnHw4EHp0aOH5MyZUwDJly+ffPbZZ05vFWJaEED37mDn/SDw8YEE7gcBD5JxYkocFCpUiICAAIdMu9y6dSv9+/d/oo18wsPDn+hTj5+fH40bN7br5klJoQXxNO7evcuJEyc4evQop06dom7dukm+xtHcuXNp2bIlH3zwQZzl6a22du1afH19yZAhA8uXL49z0yR7CQ0NZdmyZUydOpVVq1YBuphnhw4deP311x0+XTa+FoTZk9rBAgMDKV68OG3atMHLywt/f38qVKhAqVKlGDhwYNRxce19cPXqVerXr0+pUqXo0KED0RP6mDFj8PLywsvLK2rjosDAQEqUKIGfnx/FihWjVatWrF69mmrVqlG0aFG2b98ea5yXLl2idevW7NixAx8fH06ePBnvPg2ffPIJ5cqVY8GCBXHuYdGnTx88PT0pXbo0PXv25O+//2bZsmX06tUr6hpG3NKnT4+3tzfNmjWjd+/eST45ALz11lt0796d8ePH89NPP1kdziN++OEHGjZsSL58+di6davDkwNAmjRpaNasGX/88QeBgYEMGjSI48eP89Zbb5EnTx4+/PBD9u/f7/A4YhVX0yKp3Vy1i+n06dOilJItW7aIyIN9He7fvy+1atWSvXv3ikjcex9069Ytak+I3377TQC5fPmyBAQEiJeXlwQHB8utW7fE09NTdu3aJadPnxZ3d3fZt2+fhIeHS7ly5aRdu3YSEREhS5culddeey3OWNetWyeNGjUSEXnsPg0jRowQEYlzD4srV65IsWLFogZdY+4DYU+u8Hs2Ei40NFRq1KghGTJkkH379lkdjojorr7BgwcLILVr1476e7VKeHi4rFq1Slq0aCFp0qQRQCpWrCiTJ0+2excjFu0HYdgULFiQKlWqADB//nzKlStH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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"XDxkGAW786OM"},"source":["## Best Model"]},{"cell_type":"code","metadata":{"id":"LdiROlz-86OM","executionInfo":{"status":"ok","timestamp":1616963086835,"user_tz":240,"elapsed":15972,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}}},"source":["lr_model_2 = LinearRegression().fit(train_x, train_y)\n","print(lr_model_2.intercept_, lr_model_2.coef_)"],"execution_count":298,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Ivo_WfP086OM"},"source":["Factors that are positively related to winnings are\n","* buildUpPlaySpeed\t\n","* buildUpPlayPassing\n","* defencePressure\n","\n","and factors that are negatively related are\n","\n","\t\n","* chanceCreationPassing\t\n","* chanceCreationCrossing\t\n","* chanceCreationShooting\t\n","* defenceAggression\t\n","* defenceTeamWidth\n"]},{"cell_type":"markdown","metadata":{"id":"0TZinREl8fI2"},"source":["# Model 3: Net Score"]},{"cell_type":"markdown","metadata":{"id":"emtL2J6bc1eW"},"source":["## Model Selection"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":431},"id":"CY5aOLVdar9_","executionInfo":{"status":"ok","timestamp":1616963086836,"user_tz":240,"elapsed":15968,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}},"outputId":"a5fc3f71-40e3-450e-aca8-580ad110a4e0"},"source":["feature_3, target_3 = merge_df.iloc[:, 3:-4] / 100, merge_df.iloc[:, -1]\n","feature_3"],"execution_count":299,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>buildUpPlaySpeed</th>\n","      <th>buildUpPlayPassing</th>\n","      <th>chanceCreationPassing</th>\n","      <th>chanceCreationCrossing</th>\n","      <th>chanceCreationShooting</th>\n","      <th>defencePressure</th>\n","      <th>defenceAggression</th>\n","      <th>defenceTeamWidth</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.52</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.53</td>\n","      <td>0.54</td>\n","      <td>0.43</td>\n","      <td>0.44</td>\n","      <td>0.50</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.52</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.53</td>\n","      <td>0.54</td>\n","      <td>0.43</td>\n","      <td>0.44</td>\n","      <td>0.50</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.52</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.53</td>\n","      <td>0.54</td>\n","      <td>0.43</td>\n","      <td>0.44</td>\n","      <td>0.50</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.52</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.53</td>\n","      <td>0.54</td>\n","      <td>0.43</td>\n","      <td>0.44</td>\n","      <td>0.50</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.45</td>\n","      <td>0.55</td>\n","      <td>0.50</td>\n","      <td>0.60</td>\n","      <td>0.45</td>\n","      <td>0.50</td>\n","      <td>0.45</td>\n","      <td>0.60</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1881</th>\n","      <td>0.69</td>\n","      <td>0.39</td>\n","      <td>0.55</td>\n","      <td>0.59</td>\n","      <td>0.46</td>\n","      <td>0.35</td>\n","      <td>0.37</td>\n","      <td>0.37</td>\n","    </tr>\n","    <tr>\n","      <th>1882</th>\n","      <td>0.65</td>\n","      <td>0.39</td>\n","      <td>0.55</td>\n","      <td>0.59</td>\n","      <td>0.46</td>\n","      <td>0.37</td>\n","      <td>0.39</td>\n","      <td>0.37</td>\n","    </tr>\n","    <tr>\n","      <th>1883</th>\n","      <td>0.65</td>\n","      <td>0.39</td>\n","      <td>0.55</td>\n","      <td>0.59</td>\n","      <td>0.46</td>\n","      <td>0.37</td>\n","      <td>0.39</td>\n","      <td>0.37</td>\n","    </tr>\n","    <tr>\n","      <th>1884</th>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.45</td>\n","      <td>0.45</td>\n","      <td>0.50</td>\n","    </tr>\n","    <tr>\n","      <th>1885</th>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>0.45</td>\n","      <td>0.45</td>\n","      <td>0.50</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1886 rows × 8 columns</p>\n","</div>"],"text/plain":["      buildUpPlaySpeed  buildUpPlayPassing  ...  defenceAggression  defenceTeamWidth\n","0                 0.52                0.50  ...               0.44              0.50\n","1                 0.52                0.50  ...               0.44              0.50\n","2                 0.52                0.50  ...               0.44              0.50\n","3                 0.52                0.50  ...               0.44              0.50\n","4                 0.45                0.55  ...               0.45              0.60\n","...                ...                 ...  ...                ...               ...\n","1881              0.69                0.39  ...               0.37              0.37\n","1882              0.65                0.39  ...               0.39              0.37\n","1883              0.65                0.39  ...               0.39              0.37\n","1884              0.50                0.50  ...               0.45              0.50\n","1885              0.50                0.50  ...               0.45              0.50\n","\n","[1886 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":299}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":491},"id":"96ESvAzUa3iN","executionInfo":{"status":"ok","timestamp":1616963092953,"user_tz":240,"elapsed":22081,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}},"outputId":"e3d78d93-a84e-420f-c110-83169f173c70"},"source":["linear_regression = []\n","random_forests = []\n","gradient_boostings = []\n","lr_sum = 0\n","rf_sum = 0\n","gbt_sum = 0\n","n_test = 10\n","for i in range(n_test):\n","    train_x, test_x, train_y, test_y = train_test_split(feature_1, target_1, test_size=0.2, shuffle=True)\n","    lr_error = lr(train_x, train_y, test_x, test_y)\n","    rf_error = random_forest(train_x, train_y, test_x, test_y)\n","    gbt_error = gb(train_x, train_y, test_x, test_y)\n","    linear_regression.append(lr_error)\n","    lr_sum += lr_error\n","    random_forests.append(rf_error)\n","    rf_sum += rf_error\n","    gradient_boostings.append(gbt_error)\n","    gbt_sum += gbt_error\n","    print(\"testing on \" + str(i) + \" rounds is done.\")\n","print(\"average error for linear regression on data is \", lr_sum / n_test)\n","print(\"average error for random forest on data is \", rf_sum / n_test)\n","print(\"average error for gradient_boosting on data is \", gbt_sum / n_test)\n","fig, ax = plt.subplots()\n","x = np.arange(n_test)\n","plt.plot(x, np.array(linear_regression), color=\"black\", label=\"linear_regression\")\n","plt.plot(x, np.array(random_forests), color=\"r\", label=\"random_forest\")\n","plt.plot(x, np.array(gradient_boostings), color=\"b\", label=\"GBT\")\n","plt.xlabel(\"nth test\")\n","plt.xticks(np.arange(0, n_test, step=1))\n","plt.ylabel(\"error\")\n","plt.legend()\n","plt.show()\n","fig.savefig(\"/content/drive/MyDrive/Citadel Datathon/methods_select_team_net_score.png\")"],"execution_count":300,"outputs":[{"output_type":"stream","text":["testing on 0 rounds is done.\n","testing on 1 rounds is done.\n","testing on 2 rounds is done.\n","testing on 3 rounds is done.\n","testing on 4 rounds is done.\n","testing on 5 rounds is done.\n","testing on 6 rounds is done.\n","testing on 7 rounds is done.\n","testing on 8 rounds is done.\n","testing on 9 rounds is done.\n","average error for linear regression on data is  0.47045654543314236\n","average error for random forest on data is  0.4926446846817991\n","average error for gradient_boosting on data is  0.5343474716660174\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"DAJNOJn2pWYs"},"source":["## Best Model"]},{"cell_type":"code","metadata":{"id":"e7fx8Jx_bZMe"},"source":["lr_model_3 = LinearRegression().fit(train_x, train_y)\n","print(lr_model_3.intercept_, lr_model_3.coef_)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"geb6k4Sb7FRw"},"source":["Factors that are positively related to net goals are\n","* buildUpPlaySpeed\n","* chanceCreationPassing\n","* chanceCreationCrossing\t\n","* defencePressure\n","\n","and factors that are negatively related are\n","\t\n","* buildUpPlayPassing\t\n","* chanceCreationShooting\n","* defenceAggression\t\n","* defenceTeamWidth"]},{"cell_type":"code","metadata":{"id":"MZidsAWzIApN","executionInfo":{"status":"ok","timestamp":1616963092955,"user_tz":240,"elapsed":22073,"user":{"displayName":"Hanze Sun","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgieZxn42d_t_AQZrpir74fVSFdBRvf0cqQ2bCa=s64","userId":"07475331774837359455"}}},"source":[""],"execution_count":301,"outputs":[]}]}